@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using VocaDb.Model.DataContracts.Artists;
@using VocaDb.Model.Domain.Artists
@using VocaDb.Web.Helpers;
@using VocaDb.Model.DataContracts.Songs;
@using VocaDb.Model.DataContracts.Albums;
@inherits VocaDb.Web.Code.HelperPage

@helper ArtistGrid(IEnumerable<ArtistWithAdditionalNamesContract> artists, int columns,
	bool displayType = false) {
	
	<table>
		@{ int i = 0; }
	
		@foreach (var artist in artists) {
			if (i % columns == 0) {
				@Html.Raw("<tr>")
			}
			<td>
				@ArtistIconLink(artist)
			</td>
			<td>
				@Html.ActionLink(artist.Name, "Details", "Artist", new { id = artist.Id }, new { title = artist.AdditionalNames })
				@if (displayType) {
					@("(")@Translate.ArtistTypeName(artist.ArtistType)@(")")
				}
				@if (!string.IsNullOrEmpty(artist.AdditionalNames)) {
					<br />
					<span class="extraInfo">@artist.AdditionalNames</span>
				}
			</td>
			{ i++; }
			if (i % columns == 0) {
				@Html.Raw("</tr>")
			}
		}
		@if (i % columns != 0) {
			@Html.Raw("</tr>")
		}
	</table>
			
}

@helper ArtistIconLink(ArtistContract artist) {
	<a href="@Url.Action("Details", "Artist", new { id = artist.Id })">
		<img src="@Url.Action("PictureThumb", "Artist", new { id = artist.Id })" alt="Thumb" class="coverPicThumb" />
	</a>		
}

@helper ArtistList(IEnumerable<ArtistForAlbumContract> artists, bool showRoles = false) {
	var ordered = artists.OrderBy(a => a.IsSupport).ToArray();
	foreach (var artist in ordered) {
		if (artist.IsSupport) {
			@("(")
		}
		if (artist.Artist != null) {
			@Html.ActionLink(artist.Artist.Name, "Details", "Artist", new { id = artist.Artist.Id }, new { title = artist.Artist.AdditionalNames })
		} else {
			@artist.Name		
		}
        if (showRoles && artist.EffectiveRoles != ArtistRoles.Default) {
			@(" (" + Translate.ArtistRoleNames.GetAllNameNames(artist.EffectiveRoles, ArtistRoles.Default) + ")")
		}        
		if (artist.IsSupport) {
			@(")")
		}
		if (artist != ordered.Last()) {
			@(", ")
		}
	}
}

@helper ArtistList(IEnumerable<ArtistForSongContract> artists, bool showRoles = false) {
	var ordered = artists.OrderBy(a => a.IsSupport).ToArray();
	foreach (var artist in ordered) {
		if (artist.IsSupport) {
			@("(")
		}
		if (artist.Artist != null) {
			@Html.ActionLink(artist.Artist.Name, "Details", "Artist", new { id = artist.Artist.Id }, new { title = artist.Artist.AdditionalNames })
		} else {
			@artist.Name		
		}
        if (showRoles && artist.EffectiveRoles != ArtistRoles.Default) {
			@(" (" + Translate.ArtistRoleNames.GetAllNameNames(artist.EffectiveRoles, ArtistRoles.Default) + ")")
		}
		if (artist.IsSupport) {
			@(")")
		}
		if (artist != ordered.Last()) {
			@(", ")
		}
	}
}

@helper PrintArchivedArtistData(ComparedArtistsContract comparedArtists) {

	<fieldset>
		<legend>Content</legend>
	
		<table>
			@ArchivedEntryHelpers.DataRow("Id", comparedArtists.FirstData.Id)
			@ArchivedEntryHelpers.PictureRow("Picture", comparedArtists, id => Url.Action("ArchivedVersionPicture", "Artist", new { id }))
			@ArchivedEntryHelpers.TranslatedNameRow(comparedArtists, d => d.TranslatedName)
			@ArchivedEntryHelpers.DataRowList("Names", comparedArtists, d => DataFormatUtils.GenerateHtmlFromHelper(d.Names, ArchivedEntryHelpers.NameInfo))
			@ArchivedEntryHelpers.DataRowD("Description", comparedArtists, d => d.Description)
			@ArchivedEntryHelpers.DataRow("Artist type", comparedArtists, d => Translate.ArtistTypeName(d.ArtistType))
			@ArchivedEntryHelpers.DataRowList("External links", comparedArtists, d => DataFormatUtils.GenerateHtmlFromHelper(d.WebLinks, ArchivedEntryHelpers.WebLinkInfo))
			@ArchivedEntryHelpers.ObjectRefList("Groups", comparedArtists, d => d.Groups)
			@ArchivedEntryHelpers.ObjectRefList("Members", comparedArtists, d => d.Members)
			@ArchivedEntryHelpers.DataRowList("Pictures", comparedArtists, d => DataFormatUtils.GenerateHtmlFromHelper(d.Pictures, ArchivedEntryHelpers.PictureFileInfo))
			@ArchivedEntryHelpers.ObjectRefList("Albums", comparedArtists, d => d.Albums)
		</table>	

	</fieldset>

}

@helper AlbumItems(IEnumerable<VocaDb.Model.DataContracts.Albums.AlbumWithAdditionalNamesContract> albums,
	Func<AlbumWithAdditionalNamesContract, string> extraData = null, bool showArtists = false) {
	
		foreach (var album in albums) {
		<li>
			@Helpers.DraftIcon(album)
			@Html.ActionLink(album.Name, "Details", "Album", new { id = album.Id }, new { title = album.AdditionalNames })
			@if (extraData != null) {
			@extraData(album)
   }
			@if (showArtists) {
				<br />
				<span class="extraInfo">@album.ArtistString</span>
   }
		</li>
		}
	 
}

@helper Albums(IEnumerable<VocaDb.Model.DataContracts.Albums.AlbumWithAdditionalNamesContract> albums,
	Func<AlbumWithAdditionalNamesContract, string> extraData = null, bool showArtists = false, string listId = null) {

	<ul @{ if (!string.IsNullOrEmpty(listId)) { @("id=" + listId);
		} }>
		@AlbumItems(albums, extraData, showArtists)
	</ul>
	
}

@helper Artists(IEnumerable<VocaDb.Model.DataContracts.Artists.ArtistWithAdditionalNamesContract> artists,
	bool showType = false,
	Func<ArtistWithAdditionalNamesContract, string> extraData = null) {

	<ul>
	@foreach (var artist in artists) {
		<li>
			@Html.ActionLink(artist.Name, "Details", "Artist", new { id = artist.Id }, null)
			@if (showType) {
				@("(")@Translate.ArtistTypeName(artist.ArtistType)@(")")
   }
			@if (extraData != null) {
				@extraData(artist)
   }
			<br />
			<span class="extraInfo">@artist.AdditionalNames</span>
		</li>
 }
	</ul>
	
}

@helper Songs(VocaDb.Model.DataContracts.Songs.SongWithAdditionalNamesContract[] songs) {
	@Songs(songs, s => "(" + HelperRes.HelperStrings.Added + " " + s.CreateDate.ToShortDateString() + ")")
}

@helper Songs(IEnumerable<SongWithAdditionalNamesContract> songs, Func<SongWithAdditionalNamesContract, string> extraData, bool showArtists = false) {

	<ul>
	@foreach (var song in songs) {
		<li>
			@Helpers.PVServiceIcons(song.PVServices)
			@Html.ActionLink(song.Name, "Details", "Song", new { id = song.Id }, new { title = song.AdditionalNames })
			@if (extraData != null) {
			@extraData(song)
   }
			@if (showArtists) {
				<br />
				<span class="extraInfo">@song.ArtistString</span>
   }
		</li>
 }
	</ul>
	
}