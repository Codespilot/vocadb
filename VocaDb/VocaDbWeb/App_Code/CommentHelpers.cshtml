@using VocaDb.Model.DataContracts
@using VocaDb.Web.Helpers
@using VocaDb.Web.Code
@inherits VocaDb.Web.Code.HelperPage

@helper CommentBodyLarge(CommentContract contract, bool allowDelete, bool alwaysAllowDelete = false) {
	<div class="comment media comment-large">
		<a class="pull-left" href="@Url.Action("Profile", "User", new { id = contract.Author.Name })">
			@UserHelpers.ProfileIcon(contract.Author, 70)
		</a>
			
		<div class="media-body">
			<h3 class="media-heading comment-large-header">
				@UserHelpers.UserLink(contract.Author)
				<small class="extraInfo pull-right">
					@TimeAgoStringBuilder.FormatTimeAgo(contract.Created)
					@if (alwaysAllowDelete || (allowDelete && Login.CanDeleteComment(contract))) {
						@Html.Raw("&nbsp;&nbsp;");
						<a href="#" id="deleteComment_@(contract.Id)" class="deleteComment textLink deleteLink">@ViewRes.SharedStrings.Delete</a>
					}
				</small>
			</h3>
			<p>
				@Helpers.ConvertNewlinesToBreaks(contract.Message)
			</p>			
		</div>
	</div>		
}

@helper CommentEntryItem(UnifiedCommentContract comment) {
	
	var entry = comment.Entry;
	var thumbUrl = Url.EntryThumbUrl(entry, comment.SongThumbUrl);
	
	<div class="media">
		@if (!string.IsNullOrEmpty(thumbUrl)) {
		<a class="pull-left" href="@Url.Action("Details", entry.EntryType.ToString(), new { id = entry.Id })" title="@entry.Name.AdditionalNames">
			<img src="@thumbUrl" alt="thumb" class="coverPicThumb" />
		</a>
		}
		
		<div class="media-body">
			<h4 class="media-heading">
				<a href="@Url.Action("Details", entry.EntryType.ToString(), new { id = entry.Id })" title="@entry.Name.AdditionalNames">
					@entry.Name.DisplayName
				</a>
			</h4>
			@if (!string.IsNullOrEmpty(comment.ArtistString)) {
				<span>@comment.ArtistString</span>
			}
		</div>
	</div>
		
}

@helper CommentWithEntryVertical(UnifiedCommentContract comment) {
	
	@CommentEntryItem(comment)
	@PrintComment(comment, false);	
	<hr />
	
}

@helper PrintComment(CommentContract contract, bool allowDelete, bool alwaysAllowDelete = false) {	
	<div class="comment">
		<h3>
			@UserHelpers.UserIconLink(contract.Author, 25)

			@if (alwaysAllowDelete || (allowDelete && Login.CanDeleteComment(contract))) {
				<text>-</text> <a href="#" id="deleteComment_@(contract.Id)" class="deleteComment">@ViewRes.SharedStrings.Delete</a>
			}
			<small class="pull-right extraInfo">
				@TimeAgoStringBuilder.FormatTimeAgo(contract.Created)
			</small>		
		</h3>
		<p>
			@Helpers.ConvertNewlinesToBreaks(contract.Message)
		</p>
	</div>	
}