@using System.Web.Mvc
@using System.Web.Mvc.Html
@using VocaDb.Model.DataContracts
@using VocaDb.Model.DataContracts.PVs
@using VocaDb.Model.Domain
@using VocaDb.Web.Helpers
@inherits VocaDb.Web.Code.HelperPage
	
@helper DeletedBanner(IEntryBase mergedTo) {
	<div class="alert">
		@Resources.CommonMessages.EntryDeleted
		@if (mergedTo != null) {
			@(Resources.CommonMessages.EntryMergedTo + " ")
			@Helpers.EntryLink(new EntryBaseContract(mergedTo))
			@(".")
		}		
	</div>
}

@helper ExternalLinksList(IEnumerable<WebLinkContract> webLinks, bool showCategory = false) {
    
    foreach (var link in webLinks) {
        <a class="extLink" href="@VocaDb.Model.Service.Helpers.UrlHelper.MakePossileAffiliateLink(link.Url)">@link.DescriptionOrUrl</a>
        if (showCategory) {
            @("(")@Translate.WebLinkCategoryNames[link.Category]@(")")
        }
        <br />
	}		
    	    
}

@helper ExternalLinksRows(ICollection<WebLinkContract> webLinks) {
    
    var official = webLinks.Where(l => l.Category == WebLinkCategory.Official || l.Category == WebLinkCategory.Commercial).ToArray();
    var other = webLinks.Where(l => !official.Contains(l)).ToArray();
    
    if (official.Any()) {
        <tr>
            <td>@ViewRes.EntryDetailsStrings.OfficialLinks</td>
            <td>
                @ExternalLinksList(official, false)
            </td>	
        </tr>
    }    

    if (other.Any()) {
        <tr>
            <td>@ViewRes.EntryDetailsStrings.OtherLinks</td>
            <td>
                @ExternalLinksList(other, true)
            </td>	
        </tr>
    }    
        
}

@helper PVList(IEnumerable<PVContract> pvs, bool showPVType) {
    
 	foreach (var pv in pvs) {
		<a href="#" class="pvLink" id="pv_@(pv.Id)">
			<img src="@Html.VideoServiceLinkUrl(pv.Service)" alt="@pv.Service" />
            @(!string.IsNullOrEmpty(pv.Name) ? pv.Name : pv.Service.ToString())
            @if (showPVType) {
			    @("(" + Translate.PVTypeNames[pv.PVType] + ")")
            }
		</a>
		@Html.Raw("&nbsp;")
		@("(")<a href="@pv.Url">@ViewRes.Song.DetailsStrings.ViewExternal</a>@(")")
		<br />
	}			
       
}
		  
@helper ReportEntryPopup(MvcHtmlString reportTypesDropdown) {
	
<div id="reportEntryPopup" style="display:none;" title="@ViewRes.EntryDetailsStrings.ReportAnError">
	
	<label>
		@ViewRes.EntryDetailsStrings.ReportType
	</label>
	@reportTypesDropdown
	
	<label>
		@ViewRes.EntryDetailsStrings.ReportNotes
	</label>
	@Html.TextArea("reportNotes", new { id = "reportNotes", @class = "input-xlarge" })

</div>

}