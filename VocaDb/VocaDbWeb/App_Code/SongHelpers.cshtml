@inherits VocaDb.Web.Code.HelperPage
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@using VocaDb.Model.DataContracts.Songs;
@using VocaDb.Web.Helpers;

@helper LyricsInfo(LyricsForSongContract lyrics) {
	<text>@lyrics.Language (@lyrics.Source)</text>
}

@helper PrintArchivedSongData(ArchivedSongContract data) {

	<fieldset>
		<legend>Content</legend>
	
		<table>
			@ArchivedEntryHelpers.DataRow("Id", data.Id)
			@ArchivedEntryHelpers.TranslatedNameRow(data.TranslatedName)
			@ArchivedEntryHelpers.DataRowList("Names", DataFormatUtils.GenerateHtmlFromHelper(data.Names, ArchivedEntryHelpers.NameInfo))
			@ArchivedEntryHelpers.DataRow("Notes", data.Notes)
			@ArchivedEntryHelpers.DataRow("Song type", data.SongType)
			@ArchivedEntryHelpers.DataRow("Original version", ArchivedEntryHelpers.ObjectRefInfo(data.OriginalVersion))
			@ArchivedEntryHelpers.DataRowList("External links", DataFormatUtils.GenerateHtmlFromHelper(data.WebLinks, ArchivedEntryHelpers.WebLinkInfo))
			@ArchivedEntryHelpers.DataRowList("Artists", DataFormatUtils.GenerateHtml(data.Artists, artist => MvcHtmlString.Create(artist.NameHint + " [" + artist.Id + "] - IsSupport: " + artist.IsSupport + ", Roles: " + artist.Roles)))
			@ArchivedEntryHelpers.DataRowList("PVs", DataFormatUtils.GenerateHtmlFromHelper(data.PVs, ArchivedEntryHelpers.PVInfo))
			@ArchivedEntryHelpers.DataRowList("Lyrics", DataFormatUtils.GenerateHtmlFromHelper(data.Lyrics, LyricsInfo))
		</table>	

	</fieldset>

}

@helper SongIconLink(SongContract song) {
	<a href="@Url.Action("Details", "Song", new { id = song.Id })">
		<img src="@song.ThumbUrl" alt="Cover" class="coverPicThumb" />
	</a>		
}

@helper Songs(IEnumerable<SongWithAdditionalNamesContract> songs, bool songType = false) {
	
	<table>
		@foreach (var song in songs) {
		<tr>
			<td>
				@if (!string.IsNullOrEmpty(song.ThumbUrl)) {
				<a href="@Url.Action("Details", "Song", new { id = song.Id })">
					<img src="@song.ThumbUrl" alt="Thumb" class="coverPicThumb" />
				</a>
				}
			</td>
			<td>
				@Html.ActionLink(song.Name, "Details", "Song", new { id = song.Id }, new { title = song.AdditionalNames })
				(@Translate.SongTypeNames[song.SongType])
				<br />
				<span class="extraInfo">@song.ArtistString</span>
			</td>
	   </tr>
	 }	
	</table>
	
	
}

@helper SongGrid(IEnumerable<SongWithAdditionalNamesContract> songs, int columns,
	bool displayType = false) {
	
	<table>
		@{ int i = 0; }
	
		@foreach (var song in songs) {
			if (i % columns == 0) {
				@Html.Raw("<tr>")
			}
			<td>
				@if (!string.IsNullOrEmpty(song.ThumbUrl)) {
				<a href="@Url.Action("Details", "Song", new { id = song.Id })">
					<img src="@song.ThumbUrl" alt="Thumb" class="coverPicThumb" />
				</a>
				}
			</td>
			<td>
				@Html.ActionLink(song.Name, "Details", "Song", new { id = song.Id }, new { title = song.AdditionalNames })
				@if (displayType) {
					@("(")@Translate.SongTypeNames[song.SongType]@(")")
				}
				<br />
				<span class="extraInfo">@song.ArtistString</span>
			</td>
			{ i++; }
			if (i % columns == 0) {
				@Html.Raw("</tr>")
			}
		}
		@if (i % columns != 0) {
			@Html.Raw("</tr>")
		}
	</table>
			
}

@helper SongLists(IEnumerable<SongListContract> songLists) {
	
	<table>
		@foreach (var list in songLists) {
			<tr>
				<td>@Html.ActionLink(list.Name, "Details", "SongList", new { id = list.Id }, new { title = list.Description })</td>
				<td>
					@if (list.CanEdit) {
						<a href="@Url.Action("Edit", "SongList", new { id = list.Id })" class="textLink editLink">@ViewRes.SharedStrings.Edit</a>
					}
				</td>
			</tr>
		}
	</table>

}