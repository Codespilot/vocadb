<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GlArtistAnimator" xml:space="preserve">
    <value>"アニメーター" - 主にアニメーションPVを制作する人。</value>
  </data>
  <data name="GlArtistCircle" xml:space="preserve">
    <value>"サークル" - 同人イベント(コミケやボーマス等)で自主出版・自主販売を行うグループ。</value>
  </data>
  <data name="GlArtistCompletedTitle" xml:space="preserve">
    <value>アーティストの項目が完成されるには、以下の基準を満たしていなければなりません：</value>
  </data>
  <data name="GlArtistHasDescription" xml:space="preserve">
    <value>アーティストに説明、または一つ以上の外部リンク（wiki、ニコニコ動画のマイリスト等）が記載されていること</value>
  </data>
  <data name="GlArtistLabel" xml:space="preserve">
    <value>"レーベル" - その他のアーティスト達のアルバムを出版する営利会社。</value>
  </data>
  <data name="GlArtistNameNotUnspecified" xml:space="preserve">
    <value>アーティストは少なくとも一つは不明な言語によらない名前を持っていること</value>
  </data>
  <data name="GlArtistOtherGroup" xml:space="preserve">
    <value>"その他のグループ" - レーベルからアルバムをリリースするグループ。</value>
  </data>
  <data name="GlArtistOtherIndividual" xml:space="preserve">
    <value>"その他の個人" - 作詞家やイラストレーターなど、その他の人々。</value>
  </data>
  <data name="GlArtistOtherVocalist" xml:space="preserve">
    <value>"その他のボーカル" - 人間のシンガー（ニコニコ動画における歌い手）。</value>
  </data>
  <data name="GlArtistPictureChoosing" xml:space="preserve">
    <value>アーティストに画像を追加する時は、その画像が彼もしくは彼女の作品（曲）にではなくアーティスト自身に関連深いものを選ぶよう心掛けて下さい。アーティストの項目にアルバムのジャケット画像をアップロードしないこと。とは言え、アーティストのメイン画像を選ぶに当たって共通のルールがあるわけではありません。アーティスト自身の写真や公式ロゴが望ましいです。アーティストに十分関連する画像であればいくつ追加しても構いません。
画像の使用に問題がある場合は削除します。
もし適した画像が無ければ、アーティストの公式プロフィールにあるどんな画像でも――例えばツイッター等の画像でも可能です。</value>
  </data>
  <data name="GlArtistPictureTitle" xml:space="preserve">
    <value>アーティスト画像</value>
  </data>
  <data name="GlArtistProducer" xml:space="preserve">
    <value>"プロデューサー" - 曲（VOCALOID曲の場合、通常はボーカルにVOCALOIDを使用します）を作る人。必ずしもオリジナルの作曲家とは限りません。</value>
  </data>
  <data name="GlArtistRoles" xml:space="preserve">
    <value>全てのアーティストは、彼もしくは彼女が作品の中で何の役割を担う人なのか判断するための分類がなされています。その役割はアルバムや曲ごとに違ってくる可能性は有りますが、多くの場合、アーティストは一つの役割に深く関わります。</value>
  </data>
  <data name="GlArtistsTitle" xml:space="preserve">
    <value>アーティスト、プロデューサー、そしてVOCALOID</value>
  </data>
  <data name="GlArtistTypeNotUnspecified" xml:space="preserve">
    <value>アーティストの種類が“不明”ではないこと</value>
  </data>
  <data name="GlArtistTypesTitle" xml:space="preserve">
    <value>アーティストの種類</value>
  </data>
  <data name="GlAvoidDirectDownload" xml:space="preserve">
    <value>メディアファイル（mp3等）へ直接リンクすることは、それが公式・合法のものであっても基本的に認められていません。もし公式に楽曲や動画を配布しているのであれば、直リンクの代わりにそのアーティストの使用している正規のダウンロードページ（例：ピアプロ）へのリンクを貼って下さい。</value>
  </data>
  <data name="GlAvoidDuplicates" xml:space="preserve">
    <value>既にデータベースに存在する事柄を新規に登録することは避けて下さい。同じ物について複数の項目が出来てしまっている場合はスタッフが削除あるいは一つの項目に統合します。</value>
  </data>
  <data name="GlAvoidFileSharing" xml:space="preserve">
    <value>有用な情報をもたらさない不正なファイル共有サイト（例：Mediafire、Megaupload、Torrents）へのダウンロードリンクを貼ることは“認められていません”。有益な情報源であるブログ、フォーラム、wiki等(例：MikuDB、Miku;Zen)へのリンクは“認められています”。</value>
  </data>
  <data name="GlAvoidOfftopic" xml:space="preserve">
    <value>これはVOCALOIDに関連するコンテンツのためのデータベースです。UTAUやVOCALOIDの関わるコラボレーションは承認されますが、全くVOCALOIDに関係の無いコンテンツは削除されます。</value>
  </data>
  <data name="GlEditApprovedWithCaution" xml:space="preserve">
    <value>完成もしくは承認された（下書きの状態ではない）記事を編集する際は、あなたがそれに手を加える適切な理由が有るのか、よく考えて下さい。そして、敢えて手を加える理由が誰の目にも明らかな場合を除いて、なるべく記事を編集した理由をはっきり示して下さい。</value>
  </data>
  <data name="GlGeneralTitle" xml:space="preserve">
    <value>General principles</value>
  </data>
  <data name="GlHowCanIAddEntriesTitle" xml:space="preserve">
    <value>どうすれば新しくアーティスト（プロデューサー）、アルバム、曲を追加出来るのですか？</value>
  </data>
  <data name="GlNamesEnglish" xml:space="preserve">
    <value>"英語"は正式名が英語である場合や正式名の英訳が判っている場合に使用します。</value>
  </data>
  <data name="GlNamesHow" xml:space="preserve">
    <value>全ての名前は第一にオリジナルの言語――多くの場合日本語で記載されているのでしょうが、例えば英語や韓国語の場合もあるでしょう。このデータベースには３つの言語オプションを用意してあります。：</value>
  </data>
  <data name="GlNamesNonEnglish" xml:space="preserve">
    <value>"英語以外の言語"はオリジナルのタイトルが英語とローマ字以外の全ての言語、例えば日本語等の場合に使用します。</value>
  </data>
  <data name="GlNamesRomaji" xml:space="preserve">
    <value>"ローマ字表記"は、どの国の人にも読めるようにオリジナルの名前をアルファベットで記すものです。</value>
  </data>
  <data name="GlNamesTitle" xml:space="preserve">
    <value>名前と訳</value>
  </data>
  <data name="GlNamesUnspecified" xml:space="preserve">
    <value>"不明な言語"は意味を持たない言葉や未知の言語に対応しています。不明な言語による名称は他の言語の名称が設定されている場合は項目名として表示されることはありません。</value>
  </data>
  <data name="GlRegister" xml:space="preserve">
    <value>このサイトに登録し、トップページ左のメニューにあるリンク、または「アーティスト」、「アルバム」、「曲」それぞれのリストページにあるボタンから追加出来ます。</value>
  </data>
  <data name="GeWhatIsVocaDbTitle" xml:space="preserve">
    <value>VocaDBとは</value>
  </data>
  <data name="TabVocaDb" xml:space="preserve">
    <value>VocaDBについて</value>
  </data>
</root>