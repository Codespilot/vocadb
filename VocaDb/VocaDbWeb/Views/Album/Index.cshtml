@using VocaDb.Model.Service
@using VocaDb.Web.Helpers;
@using PagedList.Mvc;
@using VocaDb.Web.Models.Album
@using R = ViewRes.Album;
@model VocaDb.Web.Models.Album.Index
@{
	ViewBag.Title = @ViewRes.SharedStrings.Albums;
}

@section Toolbar {
	@Html.ActionLink(ViewRes.Album.IndexStrings.AddAlbum, "Create", null, new { id = "createLink", @class = (Login.CanManageDb ? "" : "disabled") })
	@if (Login.CanDeleteEntries) {
		@Html.Raw("&nbsp")
		@Html.ActionLink(ViewRes.EntryIndexStrings.ManageDeleted, "Deleted", null, new { id = "manageDeletedLink" })
	}
}

<div class="row-fluid">
	
	<div class="span3">
		<form>
			<div>
				@ViewRes.EntryIndexStrings.SortBy
				<div class="btn-group">
					<button class="btn dropdown-toggle" data-toggle="dropdown">@Translate.AlbumSortRuleNames[Model.Sort]
						<span class="caret"></span>
					</button>
					<ul class="dropdown-menu">
						@foreach (var sortRule in Translate.AlbumSortRuleNames.ValuesAndNames) {
							<li>@Html.ActionLink(sortRule.Value, "Index", new IndexRouteParams(Model.RouteParams, null) { sort = sortRule.Key })</li>
						}
					</ul>
				</div>
				<div class="btn-group">
					<a class="@Html.CSS("btn btn-nomargin").If(m => m.View == EntryViewMode.Details, "active")" 
						href="@Url.Action("Index", new IndexRouteParams(Model.RouteParams, Model.Page) { view = EntryViewMode.Details })"><i class="icon-list"></i></a>
					<a class="@Html.CSS("btn btn-nomargin").If(m => m.View == EntryViewMode.Tiles, "active")" 
						href="@Url.Action("Index", new IndexRouteParams(Model.RouteParams, Model.Page) { view = EntryViewMode.Tiles })"><i class="icon-th"></i></a>
				</div>
			</div>
		</form>
	</div>

</div>

@using (Html.BeginForm("Index", "Album", FormMethod.Post, new { @class = "form-inline" })) {
	@Html.HiddenFor(m => m.Sort)
	@Html.HiddenFor(m => m.View)
	
<p>
	@ViewRes.SharedStrings.Filter: 
	@Html.TextBoxFor(m => m.Filter, new Dictionary<string, object> { { "id", "filterBox" }, { "size", 30 }, { "data-placement", "top" }, { "data-toggle", "tooltip" }, { "maxlength", 255 }, { "title", R.IndexStrings.FilterIndexHint } }) 
	&nbsp;
	@Html.DiscTypeDropDownListFor(m => m.DiscType, new { @class = "input-medium" })
	&nbsp;
	<label class="checkbox">
		@Html.CheckBoxFor(m => m.DraftsOnly)
		@ViewRes.EntryIndexStrings.OnlyDrafts
	</label>
	&nbsp;
	<button type="submit" class="btn btn-primary">@ViewRes.SharedStrings.Apply</button>
</p>

	if (Model.Albums.Any()) {
	
<p>@string.Format(ViewRes.SharedStrings.EntriesFound, Model.Albums.TotalItemCount)</p>
	
@Html.PagedListPager(Model.Albums, page => Url.Action("Index", Model.CreateRouteParams(page)), VocaDb.Web.Code.LocalizedPagedListRenderOptions.Instance)

if (Model.View == EntryViewMode.Details) {
	
<table class="table table-striped table-hover">
	<thead>
		<tr>
			<th colspan="2">@Html.ActionLink(ViewRes.SharedStrings.Name, "Index", new IndexRouteParams(Model.RouteParams, null) { sort = VocaDb.Model.Service.AlbumSortRule.Name })</th>
			<th>@Html.ActionLink(R.IndexStrings.ReleaseDate, "Index", new IndexRouteParams(Model.RouteParams, null) { sort = VocaDb.Model.Service.AlbumSortRule.ReleaseDate })</th>
			<th>@Html.ActionLink(R.IndexStrings.Rating, "Index", new IndexRouteParams(Model.RouteParams, null) { sort = VocaDb.Model.Service.AlbumSortRule.RatingAverage })</th>
		</tr>
	</thead>
	<tbody>
	  @foreach (var album in Model.Albums) {
				<tr>
					<td>
						@AlbumHelpers.AlbumIconLink(album)
					</td>
					<td>
						@Helpers.DraftIcon(album)
						@AlbumHelpers.DetailsLink(album)<br />
						<small class="extraInfo">@album.ArtistString</small><br />
						<small class="extraInfo">@Translate.DiscTypeName(album.DiscType)</small>
					</td>
					<td>
						@if (!album.ReleaseDate.IsEmpty) {
							<span>
								@HelperRes.AlbumHelpersStrings.Released @album.ReleaseDate.Formatted
								@if (!string.IsNullOrEmpty(album.ReleaseEvent)) {
									<br />
									@Html.ActionLink(album.ReleaseEvent, "Find", "Event", new { query = album.ReleaseEvent }, null)
		}
							</span>
	  }				
					</td>
					<td>
						@if (album.RatingCount > 0) {
							@Helpers.Stars(album.RatingAverage, 5)
							<br /> 
							@album.RatingCount @R.IndexStrings.Times
	  }
					</td>
				</tr>
	  }

	</tbody>
</table>

  } else {
	<div id="albums" style="display: block">
			@AlbumHelpers.AlbumThumbs(Model.Albums)
	</div>
  }
  	  
	@Html.PagedListPager(Model.Albums, page => Url.Action("Index", Model.CreateRouteParams(page)), VocaDb.Web.Code.LocalizedPagedListRenderOptions.Instance)
	}

}
@if (!Model.Albums.Any()) {

	<p>@ViewRes.EntryIndexStrings.NoResults</p>
	@Helpers.GoogleSiteSearch()

}

@section BodyScripts {
<script type="text/javascript" src="@Url.Content("~/Scripts/Album/Index.js")"></script>
}