@using System.Web.Optimization
@using VocaDb.Model.DataContracts.Artists;
@using VocaDb.Model.Helpers
@using VocaDb.Model.Service
@using VocaDb.Model.Utils
@using VocaDb.Web.Helpers;
@using VocaDb.Model.Domain.Security
@using R = ViewRes.Artist;
@model ArtistDetailsContract

@{
	ViewBag.Title = Model.Name;
	ViewBag.Subtitle = "(" + Translate.ArtistTypeName(Model.ArtistType) + ")";
	ViewBag.Parents = new[] { Html.ActionLink(ViewRes.SharedStrings.Artists, "Index") };
	ViewContext.Controller.ViewBag.Banner = VocaUriBuilder.CreateAbsolute(Url.Action("Picture", new { id = Model.Id }));

	var url = VocaUriBuilder.CreateAbsolute(Url.Action("Details", new {id = Model.Id})).ToString();
	
}

@section Head {
	@HtmlHelpers.OpenGraphMetaTags(
		url: url, 
		title: Model.Name + " (" + Translate.ArtistTypeName(Model.ArtistType) + ")", 
		description: Model.Description)
	<link rel="canonical" href="@url" />
	<link rel="stylesheet" href="@Url.Content("~/Content/Styles/Pager.css")" type="text/css" />	
}

@section Toolbar {
<a href="#" id="addToUserLink" class="@(Login.Manager.IsLoggedIn ? "" : "disabled")" style="@(Model.IsAdded ? "display: none;" : "")">@ViewRes.Artist.DetailsStrings.Follow</a>
<a href="#" id="removeFromUserLink" class="@(Login.Manager.IsLoggedIn ? "" : "disabled")" style="@(Model.IsAdded ? "" : "display: none;")">@ViewRes.Artist.DetailsStrings.Unfollow</a>

@Html.ActionLink(@ViewRes.SharedStrings.Edit, "Edit", new { id = Model.Id }, new { id = "editArtistLink", @class = (Login.CanEdit(Model) ? "" : "disabled") })

@Html.ActionLink(ViewRes.EntryDetailsStrings.ViewModifications, "Versions", new { id = Model.Id }, new { id = "viewVersions" })

<a href="#" id="reportEntryLink">@ViewRes.EntryDetailsStrings.ReportAnError</a>

@Helpers.EntryStatusMessage(Model.Status)
}

@if (Model.Deleted) {
	@EntryDetailsHelpers.DeletedBanner(Model.MergedTo)
}

@if (Model.Draft && !Model.Deleted) {
	@Helpers.DraftMessage("glproducers")
}

<div id="tabs">

	<ul>
		<li><a href="#basicInfoTab">@ViewRes.EntryDetailsStrings.BasicInfoTab</a></li>
		<li><a href="@Url.Action("Comments", "Artist", new { id = Model.Id })" title="Discussion">@ViewRes.EntryDetailsStrings.DiscussionTab (@Model.CommentCount)</a></li>
		<li><a href="#picturesTab">@ViewRes.EntryDetailsStrings.PicturesTab (@(Model.Pictures.Length + 1))</a></li>
		<li><a href="@Url.Action("AlbumsPaged", "Artist", new { id = Model.Id })" title="All albums"><span>@ViewRes.Artist.DetailsStrings.AllAlbums</span></a></li>
		<li><a href="@Url.Action("SongsPaged", "Artist", new { id = Model.Id })" title="All songs"><span>@ViewRes.Artist.DetailsStrings.AllSongs</span></a></li>
	</ul>

	<div id="basicInfoTab">

		<table>
			<tr>
				<td rowspan="10">
					<a href="@Url.Action("Picture", new { id = Model.Id })">
						<img src="@Url.Action("PictureThumb", new { id = Model.Id })" alt="@ViewRes.Artist.DetailsStrings.ArtistPicture" class="coverPic" />
					</a>
				</td>
				<td>@ViewRes.SharedStrings.ArtistName</td>
				<td>
					@Model.Name<br />
					<span class="extraInfo">@Model.AdditionalNames</span>
				</td>
			</tr>
		@if (!string.IsNullOrEmpty(Model.Description)) {
			<tr>
				<td>@ViewRes.SharedStrings.Description</td>
				<td>
					@Helpers.ConvertNewlinesToBreaks(Model.Description)
				</td>	
			</tr>
		}
			<tr>
				<td>@ViewRes.SharedStrings.Type</td>
				<td>
					@ArtistHelpers.ArtistTypeLabel(Model.ArtistType)
					@Html.ActionLink(Translate.ArtistTypeName(Model.ArtistType), "Index", new { artistType = Model.ArtistType })<br />
				</td>	
			</tr>

			<tr>
				<td>@ViewRes.SharedStrings.Tags</td>
				<td>
					<span id="tagList">
						@{ Html.RenderPartial("TagList", Model.Tags); }
					</span>
					<a href="#" id="editTags" class="@(Login.Manager.IsLoggedIn ? "" : "disabled")">@ViewRes.EntryDetailsStrings.EditTags</a>
					@if (Login.Manager.HasPermission(PermissionToken.RemoveTagUsages)) {
						@Html.ActionLink(ViewRes.EntryDetailsStrings.ManageTags, "ManageTagUsages", new { id = Model.Id }, new { id = "manageTags" })
					}
				</td>
			</tr>

			@EntryDetailsHelpers.ExternalLinksRows(Model.WebLinks)
			
			@if (Model.OwnerUsers.Any()) {
				<tr>
					<td>
						@R.DetailsStrings.AuthoredBy						
					</td>
					<td>
						@foreach (var user in Model.OwnerUsers) {
							@UserHelpers.UserIconLink(user)
							<br />
						}						
					</td>
				</tr>
			}

			@if (Model.Groups.Any()) {
			<tr>
				<td>@ViewRes.Artist.DetailsStrings.Groups</td>
				<td id="groups">
					@foreach (var grp in Model.Groups) {
						@ArtistHelpers.ArtistLink(grp.Group)
						if (grp != Model.Groups.Last()) {
							@(", ")
						}
					}
				</td>
			</tr>
			}
  
			<tr>
				<td>@ViewRes.EntryDetailsStrings.Stats</td>
				<td>
					@string.Format(R.DetailsStrings.FollowCount, Model.FollowCount)
				</td>
			</tr>

			<tr>
				<td>@ViewRes.EntryDetailsStrings.AdditionDate</td>
				<td>
					@Model.CreateDate
				</td>	
			</tr>	   
			
		</table>
	

		@if (Model.Members.Any()) {
			<h3>@ViewRes.Artist.DetailsStrings.Members</h3>
			@ArtistHelpers.ArtistGrid(Model.Members.Select(g => g.Member), 3, true)
		}

		@if (Model.LatestAlbums.Any()) {
			<br />
			<h3>@Html.ActionLink(ViewRes.Artist.DetailsStrings.RecentAlbums, "Index", "Album", new VocaDb.Web.Models.Album.IndexRouteParams { filter = "artist:" + Model.Id, sort = AlbumSortRule.AdditionDate }, null)</h3>
            <div id="newAlbums">                
    			@AlbumHelpers.AlbumThumbs(Model.LatestAlbums)
            </div>
        }
        
		@if (Model.TopAlbums.Any()) {
			<br />
			<h3>@Html.ActionLink(ViewRes.Artist.DetailsStrings.TopAlbums, "Index", "Album", new VocaDb.Web.Models.Album.IndexRouteParams { filter = "artist:" + Model.Id, sort = AlbumSortRule.RatingAverage }, null)</h3>
            <div id="topAlbums">
			    @AlbumHelpers.AlbumThumbs(Model.TopAlbums)                
            </div>
	    }
        

		@if (Model.LatestSongs.Any()) {
			<br />
			<h3>@Html.ActionLink(ViewRes.Artist.DetailsStrings.RecentSongs, "Index", "Song", new VocaDb.Web.Models.Song.IndexRouteParams { artistId = Model.Id, sort = SongSortRule.AdditionDate }, null)</h3>
			@SongHelpers.SongGrid(Model.LatestSongs, 2, true)
	    }
        
		@if (Model.TopSongs.Any()) {
			<br />
			<h3>@Html.ActionLink(ViewRes.Artist.DetailsStrings.TopSongs, "Index", "Song", new VocaDb.Web.Models.Song.IndexRouteParams { artistId = Model.Id, sort = SongSortRule.RatingScore }, null)</h3>
			@SongHelpers.SongGrid(Model.TopSongs, 2, true)
	    }
		
		<br />
		<h3>@ViewRes.EntryDetailsStrings.LatestComments</h3>
		
		@if (Model.LatestComments.Any()) {

		  foreach (var comment in Model.LatestComments) {
					@CommentHelpers.CommentBodyLarge(comment, false);
		  }

		} else {
	  
			<p>@ViewRes.EntryDetailsStrings.NoComments</p>
	  
		}
		
		<p>
			<a href="#" id="viewCommentsLink">@ViewRes.EntryDetailsStrings.ViewAllComments</a>
		</p>

	</div>

	<div id="Discussion">
	</div>
	
	<div id="picturesTab">
		
		<ul class="thumbs">
			@Helpers.ThumbItem(Url.Action("Picture", "Artist", new { id = Model.Id }),
				Url.Action("PictureThumb", "Artist", new { id = Model.Id }), 
				ViewRes.Album.DetailsStrings.CoverPicture)
			@foreach (var pic in Model.Pictures) {
			   @Helpers.ThumbItem(ImageHelper.GetImageUrl(pic), ImageHelper.GetImageUrlThumb(pic), pic.Name)
			}
		</ul>
		
	</div>
	<div id="All_albums">
	</div>

	<div id="All_songs">
	</div>

</div>

<div id="editTagsPopup" style="display:none;" title="@ViewRes.SharedStrings.Tags">

	<input type="hidden" id="editTagsArtistId" />

	<div id="editTagsContent"></div>

</div>

@EntryDetailsHelpers.ReportEntryPopup(Html.EnumDropDownList("reportType", Translate.ArtistReportTypeNames, new { id = "reportType" }))

@section BodyScripts {
	<script type="text/javascript" src="@Url.Content("~/Scripts/Shared/DiscussionTab.js")"></script>
	@Scripts.Render("~/bundles/Artist/Details")
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
	<script type="text/javascript">

		$(document).ready(function() { 
			initPage(@Model.Id, "@ViewRes.SharedStrings.Save", "@VocaDb.Model.Utils.AppConfig.HostAddress");
		});

	</script>
}