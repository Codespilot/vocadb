@using System.Web.Optimization
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers;
@using VocaDb.Model.Domain.Artists;
@using ValidationErrors = VocaDb.Model.Resources.ArtistValidationErrors;
@inherits VocaDb.Web.Code.VocaDbPage<VocaDb.Web.Models.ArtistEdit>
@{
	ViewBag.Title = "Edit artist - " + Model.Name;
	ViewBag.Parents = new[] { 
		Html.ActionLink("Artists", "Index"), 
		Html.ActionLink(Model.Name, "Details", new { id = Model.Id }) 
	};

	var validationErrors = new Dictionary<string, string> {
		{ "validationError_unspecifiedNames", ValidationErrors.UnspecifiedNames },
		{ "validationError_needReferences", ValidationErrors.NeedReferences },
		{ "validationError_needType", ValidationErrors.NeedType },
	};
	
}

@section Toolbar {
@if (Login.CanDeleteEntries) {
	if (!Model.Deleted) {
		@Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { id = "deleteLink", onclick = "return confirm(\"Are you sure you want to delete this artist?\");" })
	} else {
		@Html.ActionLink("Restore", "Restore", new { id = Model.Id }, new { id = "restoreLink" })		
	}
}
@if (Login.CanMergeEntries) {
	@Html.ActionLink("Merge", "Merge", new { id = Model.Id }, new { id = "mergeLink" })
}
}

@Helpers.ValidationSymmaryPanel("Unable to save")

@KnockoutHelpers.EntryValidationMessage(Model.Draft, validationErrors, "glartists")

<br />
<form action="@Url.Action("EditBasicDetails", "Artist")" method="POST" enctype="multipart/form-data" data-bind="submit: submit">
	@Html.HiddenFor(m => m.Id)
	@Html.HiddenFor(m => m.Name)
	@Html.HiddenFor(m => m.TooManyAlbums)

	@Helpers.SaveAndBackBtn(Url.Action("Details", new { Model.Id }))
	
	<div id="tabs">

		<ul>
			<li><a href="#basicInfoTab">Basic info</a></li>
			<li><a href="#picsTab">Additional pictures</a></li>
		</ul>

		<div id="basicInfoTab">
			<div>
				<div class="editor-label">
					@Html.LabelFor(m => m.DefaultLanguageSelection)
				</div>
				<div class="editor-field">
					@Html.LanguageSelectionDropDownListFor(m => m.DefaultLanguageSelection)
				</div>

				<div class="editor-label">
					@Helpers.HelpLabel("Primary name (in one or more languages)", ViewRes.EntryEditStrings.NameHelp)
					@Helpers.RequiredField()
					<span data-bind="visible: validationError_unspecifiedNames, qTip" class="icon errorIcon" title="@ValidationErrors.UnspecifiedNames"></span>
				</div>
				<div class="editor-field" data-bind="with: names">
					@{ Html.RenderPartial("KnockoutPartials/_NamesEditor"); }
					<input type="hidden" name="Names" id="Names" data-bind="value: ko.toJSON(allNames)" />
				</div>

				<div class="editor-label">
					<label>Main picture</label>
				</div>
				<div class="editor-field">
					<table>
						<tr>
							<td>
								<img src="@Url.Action("PictureThumb", new { id = Model.Id })" alt="Artist picture" class="coverPic" />					
							</td><td>
								<p>Allowed types: @string.Join(", ", ImageHelper.AllowedExtensions) . Maximum size is @ImageHelper.MaxImageSizeMB MB.</p>
								<input type="file" id="pictureUpload" name="pictureUpload" />					
							</td>
						</tr>
					</table>
				</div>

				<div class="editor-label">
					<label class="inline-block">Description</label>
					<span data-bind="visible: validationError_needReferences, qTip" class="icon errorIcon" title="@ValidationErrors.NeedReferences"></span>
				</div>
				<div class="editor-field">
					@Html.TextAreaForKnockout(m => m.Description, binding: "initialValue, value: description", rows: 8, cols: 70, cssClass: "span5")
				</div>

				<div class="editor-label">
					@Html.LabelFor(m => m.ArtistType)
				</div>
				<div class="editor-field">
					@Html.DropdownForKnockout(m => m.ArtistType, new SelectList(Model.AllArtistTypes, "Key", "Value"), "initialValue, value: artistTypeStr")
					<span data-bind="visible: validationError_needType, qTip" class="icon errorIcon" title="@ValidationErrors.NeedType"></span>
				</div>

				@if (Model.ArtistType != ArtistType.Circle && Model.ArtistType != ArtistType.Label) {
					<div class="editor-label">
						@Html.LabelFor(m => m.Groups)
					</div>
					<div class="editor-field">
						<table>
							<tbody id="groupTableBody">
							@foreach (var grp in Model.Groups) {
		   Html.RenderPartial("GroupForArtistEditRow", grp);
	   }
							</tbody>
						</table>
						
						@Helpers.EntrySearchNameBox("groupAddName")
					</div>
	}

				<!-- ko if: allowBaseVoicebank -->			
				<div class="editor-label">
					<label>
						Base voicebank
					</label>
				</div>
				<div class="editor-field">
					<div style="display: inline-block;" class="input-append">
						@KnockoutHelpers.LockingAutoComplete("artistAutoComplete", "baseVoicebankSearchParams", textBinding: "baseVoicebank.artistName", valBinding: "baseVoicebank.artistId")
					</div>
					<input type="hidden" name="BaseVoicebank" data-bind="value: ko.toJSON(baseVoicebank.artistContract())" />
				</div>		
				<!-- /ko -->		

				<div class="editor-label">
					@Helpers.HelpLabel("Web links", ViewRes.EntryEditStrings.ExternalLinksQuickHelp)
				</div>
				<div class="editor-field" data-bind="with: webLinks">
					@KnockoutHelpers.WebLinksEditViewKnockout(true)
					<input type="hidden" name="webLinks" data-bind="value: ko.toJSON(webLinks)" />
				</div>

				<div class="editor-label">
					@Helpers.HelpLabel("Entry status", Resources.CommonMessages.EntryStatusExplanation)
				</div>
				<div class="editor-field">
					@Html.EnumDropDownListFor(m => m.Status, Translate.EntryStatusNames.GetValuesAndNames(Model.AllowedEntryStatuses))
				</div>

			</div>
		</div>
		
		<div id="picsTab">
			
			<p>Please only upload pictures relevant to this artist, nothing else.</p>
			<p>Allowed types: @string.Join(", ", ImageHelper.AllowedExtensions) . Maximum size is @ImageHelper.MaxImageSizeMB MB.</p>

			<table>
				<tbody id="picturesTableBody">
					@foreach (var pic in Model.Pictures) {
						Html.RenderPartialTyped("EntryPictureFileEditRow", pic);
					}
				</tbody>
			</table>
			
			<a href="#" id="picAdd" class="addLink textLink">Create new</a>

		</div>

	</div>
	<br />
	
	<p>Update notes (optional)</p>
	@Html.TextAreaFor(m => m.UpdateNotes, new { @class = "input-xxlarge", @rows = 4, maxlength = 200 })	
	
	<br />	
	@Helpers.SaveAndBackBtn(Url.Action("Details", new { Model.Id }))

</form>

@section BodyScripts {
<script type="text/javascript" src="@Url.Content("~/Scripts/Shared/EntrySearchDrop.js")"></script>
@Scripts.Render("~/bundles/shared/edit", "~/bundles/Artist/Edit")

<script type="text/javascript">

	$(document).ready(function() { 

		var artistRepo = new vdb.repositories.ArtistRepository('@RootPath');

		var webLinkCategoryJson = @Html.Raw(JsonHelpers.Serialize(Translate.WebLinkCategoryNames.AllFields));
		var modelJson = @Html.Raw(JsonHelpers.Serialize(new { baseVoicebank = Model.BaseVoicebank, id = Model.Id, names = Model.Names, webLinks = Model.WebLinks }));
		ko.applyBindings(new vdb.viewModels.ArtistEditViewModel(artistRepo, webLinkCategoryJson, modelJson));
		initPage(@Model.Id); 

	});

</script>
}