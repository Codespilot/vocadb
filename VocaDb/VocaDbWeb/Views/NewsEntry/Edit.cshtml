@model VocaDb.Web.Models.NewsEntry.NewsEntryEdit

@{
	var isNew = (Model.Id == 0);

	if (!isNew) {
		ViewBag.Title = "Edit news entry - " + Model.CreateDate;
	} else {
		ViewBag.Title = "Create a news entry";
	}

	ViewBag.Parents = new[] { 
			Html.ActionLink("News", "Index") 
	};
		
}

@section Toolbar {
	@if (!isNew) {
		@Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { id = "deleteLink", onclick = "return confirm(\"Are you sure you want to delete this entry?\");" })
	}
}

@section BodyScripts {
<script type="text/javascript">

	$(document).ready(function() {
		$("#deleteLink").button({ icons: { primary: 'ui-icon-trash'} });
	});

</script>
}

@Helpers.ValidationSymmaryPanel("Unable to save properties.")

@using (Html.BeginForm()) {
	@Html.HiddenFor(m => m.CreateDate)
	@Html.HiddenFor(m => m.Id)

	<p>
		<input type="submit" class="btn btn-primary" value="Save changes" />
	</p>

	<div class="editor-label">
		@Html.LabelFor(m => m.Text)
	</div>
	<div class="editor-field">
		@Html.TextAreaFor(m => m.Text, new { cols = 70, rows = 7, @class = "span6" })<br />
		@Html.ValidationMessageFor(m => m.Text)
	</div>
	
	<div class="editor-field">
		<label class="checkbox inline">
			@Html.CheckBoxFor(m => m.Anonymous)
			Anonymous
		</label>
	</div>
	
	<div class="editor-field">
		<label class="checkbox inline">
			@Html.CheckBoxFor(m => m.Important)
			Important
		</label>
	</div>
	
	<div class="editor-field">
		<label class="checkbox inline">
			@Html.CheckBoxFor(m => m.Stickied)
			Stickied
		</label>
	</div>
	
	<br />
	<p>
		<input type="submit" class="btn btn-primary" value="Save changes" />
	</p>
	
}