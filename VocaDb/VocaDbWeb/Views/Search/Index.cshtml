@using System.Web.Optimization
@using Resources
@using VocaDb.Web.Code
@using VocaDb.Web.Helpers
@using Res = ViewRes.Search.IndexStrings;
@using SharedRes = ViewRes.SharedStrings;
@inherits VocaDbPage

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
	<title>@BrandableStrings.Layout.SiteTitle</title>
	<meta name="description" content="@PagePropertiesData.Get(ViewBag).SummarizedDescription" />
	<meta name="keywords" content="Vocaloid, VocaDB, Vocaloid database, Hatsune Miku" />
	<meta name="og:image" content="@ViewContext.Controller.ViewBag.Banner" />
	<link rel="shortcut icon" href="@Url.Content("~/Content/favicon.ico")" type="image/x-icon" />
	@Styles.Render("~/Content/css")
	<link href="@Url.Content("~/Content/Styles/Icons.css")" rel="stylesheet" type="text/css" />
	<link href="@Url.Content("~/Content/themes/redmond/jquery-ui-1.10.1.custom.min.css")" rel="stylesheet" type="text/css" />
	<link href="@Url.Content("~/Scripts/jquery.qtip.css")" rel="stylesheet" type="text/css" />

	@{ Html.RenderPartial("Partials/_GoogleAnalytics"); }
</head>
<body style="padding-top: 50px">

	<div data-bind="stopBinding: true" class="navbar navbar-inverse navbar-fixed-top">
		<div class="navbar-inner">
			<div id="topBar" class="container">
				<div class="brand">@Html.ActionLink(BrandableStrings.Layout.SiteName, "Index", "Home")</div>
				@{ Html.RenderPartial("GlobalSearchBox", new VocaDb.Web.Models.GlobalSearchBoxModel()); }
			</div>
		</div>
	</div>

	<div class="container-fluid">
		<div class="row-fluid">
			@{ Html.RenderPartial("Partials/_LeftMenu"); }
			<div class="span10 rightFrame well" style="display: none; min-height: 1000px;" data-bind="visible: true">

				<div id="messages">
					<div class="wrapper">
						<div id="ajaxLoadingMessage" style="display: none;">@ViewRes.SharedStrings.Loading</div>

						<div id="errorMessage" class="alert alert-error" style="display: none;">
							<a class="close" data-dismiss="alert" href="#">&times;</a>
							<span id="errorMessageString">@TempData.ErrorMessage()</span>
						</div>

						<div id="successMessage" class="alert alert-success" style="display: none;">
							<a class="close" data-dismiss="alert" href="#">&times;</a>
							<span id="successMessageString">@TempData.SuccessMessage()</span>
						</div>

						<div id="warnMessage" class="alert" style="display: none;">
							<a class="close" data-dismiss="alert" href="#">&times;</a>
							<span id="warnMessageString">@TempData.WarnMessage()</span>
						</div>
					</div>
				</div>

				<ul class="nav nav-pills">
					<li data-bind="css: { active: searchType() == 'Anything' }">
						<a href="#" data-bind="click: function() { searchType('Anything'); }">@EntryTypeNames.Undefined</a>
					</li>
					<li data-bind="css: { active: searchType() == 'Artist' }">
						<a href="#" data-bind="click: function() { searchType('Artist'); }">@ViewRes.SharedStrings.Artists</a>
					</li>
					<li data-bind="css: { active: searchType() == 'Album' }">
						<a href="#" data-bind="click: function() { searchType('Album'); }">@ViewRes.SharedStrings.Albums</a>
					</li>
					<li data-bind="css: { active: searchType() == 'Song' }">
						<a href="#" data-bind="click: function() { searchType('Song'); }">@ViewRes.SharedStrings.Songs</a>
					</li>
					<li data-bind="css: { active: searchType() == 'Tag' }">
						<a href="#" data-bind="click: function() { searchType('Tag'); }">@ViewRes.SharedStrings.Tags</a>
					</li>
				</ul>

				<div id="anythingSearchTab" class="form-horizontal well well-transparent">

					<div class="pull-right">
						@SearchDropDown("showArtistSearch", "artistSearchViewModel", Translate.ArtistSortRuleNames.ValuesAndNamesStrings)
						@SearchDropDown("showAlbumSearch", "albumSearchViewModel", Translate.AlbumSortRuleNames.ValuesAndNamesStrings)
						@SearchDropDown("showSongSearch", "songSearchViewModel", Translate.SongSortRuleNames.ValuesAndNamesStrings)

						<div class="btn-group" data-bind="visible: showAlbumSearch(), with: albumSearchViewModel">
							<a data-bind="css: { active: viewMode() == 'Details' }, click: function() { viewMode('Details'); }" class="btn btn-nomargin" href="#">
								<i class="icon-list"></i>
							</a>
							<a data-bind="css: { active: viewMode() == 'Tiles' }, click: function() { viewMode('Tiles'); }" class="btn btn-nomargin" href="#">
								<i class="icon-th"></i>
							</a>
						</div>

					</div>

					<div class="control-label">
						<i class="icon-search"></i>
					</div>
					<div class="control-group">
						<div class="controls">
							<div class="input-append">
								<input type="text" data-bind="value: searchTerm, valueUpdate: 'afterkeydown'" class="input-xlarge" placeholder="@Res.TypeSomething" />
								<button class="btn btn-danger" data-bind="click: function() { searchTerm(''); }, visible: searchTerm">@SharedRes.Clear</button>
								&nbsp;
							</div>
							<button class="btn" data-bind="click: function() { showAdvancedFilters(!showAdvancedFilters()); }, css: { active: showAdvancedFilters }">
								@Res.MoreFilters
								<span class="caret"></span>
							</button>
						</div>
					</div>

					<div data-bind="visible: showAdvancedFilters" style="display: none;">
						<div class="control-group" data-bind="visible: showTagFilter">
							<div class="control-label">@ViewRes.SharedStrings.Tag</div>
							<div class="controls">
								<div class="input-append">
									@KnockoutHelpers.LockingAutoComplete("tagAutoComplete", "tag")
								</div>
							</div>
						</div>

						<div class="control-group" data-bind="visible: showArtistSearch, with: artistSearchViewModel">
							<div class="control-label">@Res.ArtistType</div>
							<div class="controls">
								@ArtistHelpers.ArtistTypesDropdownKnockout("artistType")
							</div>
						</div>

						<div data-bind="visible: showAlbumSearch, with: albumSearchViewModel">
							<div class="control-group">
								<div class="control-label">@Res.AlbumType</div>
								<div class="controls">
									@AlbumHelpers.DiscTypesDropdownKnockout("albumType")
								</div>
							</div>

							<div class="control-group">
								<div class="control-label">@EntryTypeNames.Artist</div>
								<div class="controls">
									<div style="display: inline-block;" class="input-append">
										@KnockoutHelpers.LockingAutoComplete("artistAutoComplete", "artistSearchParams", textBinding: "artistName", valBinding: "artistId")
									</div>
									<!-- ko if: artistId -->
									@AlbumHelpers.ArtistAlbumParticipationStatusOptionsKnockout("artistParticipationStatus")
									<!-- /ko -->
								</div>
							</div>

						</div>

						<div data-bind="visible: showSongSearch, with: songSearchViewModel">
							<div class="control-group">
								<div class="control-label">@Res.SongType</div>
								<div class="controls">
									@SongHelpers.SongTypesDropdownKnockout("songType")
								</div>
							</div>

							<div class="control-group">
								<div class="control-label">@EntryTypeNames.Artist</div>
								<div class="controls">
									<div style="display: inline-block;" class="input-append">
										@KnockoutHelpers.LockingAutoComplete("artistAutoComplete", "artistSearchParams", textBinding: "artistName", valBinding: "artistId")
									</div>
									<!-- ko if: artistId -->
									@SongHelpers.ArtistParticipationStatusOptionsKnockout("artistParticipationStatus")
									<!-- /ko -->
								</div>
							</div>

							<div class="control-group" data-bind="visible: artistId">
								<div class="controls">
									<label class="checkbox">
										<input type="checkbox" data-bind="checked: childVoicebanks" />
										Include derived voicebanks
									</label>
								</div>
							</div>

							<div class="control-group">
								<div class="control-label">@Res.MoreRecentThan</div>
								<div class="controls">
									<select data-bind="value: since">
										<option value="">(Show all)</option>
										<option value="24">1 day</option>
										<option value="48">2 days</option>
										<option value="168">7 days</option>
										<option value="336">2 weeks</option>
										<option value="720">1 month</option>
										<option value="4320">6 months</option>
										<option value="8760">1 year</option>
									</select>
								</div>
							</div>

						</div>

						<div class="control-group" data-bind="visible: showTagSearch, with: tagSearchViewModel">
							<div class="control-label">@Res.TagCategory</div>
							<div class="controls">
								<div class="input-append">
									@KnockoutHelpers.LockingAutoComplete("tagCategoryAutoComplete", "categoryName")
								</div>
							</div>
						</div>

						<div class="control-group" data-bind="visible: showDraftsFilter">
							<div class="controls">

								<div data-bind="visible: showSongSearch, with: songSearchViewModel">
									<label class="checkbox">
										<input type="checkbox" data-bind="checked: pvsOnly" />
										@Res.OnlyWithPVs
									</label>

									<label class="checkbox" data-bind="visible: loggedUserId">
										<input type="checkbox" data-bind="checked: onlyRatedSongs" />
										@Res.InMyCollection
									</label>
								</div>

								<label class="checkbox">
									<input type="checkbox" data-bind="checked: draftsOnly" />
									@ViewRes.EntryIndexStrings.OnlyDrafts
								</label>

							</div>
						</div>

					</div>

				</div>

				@{ Html.RenderPartial("Partials/_AnythingSearchList"); }

				@{ Html.RenderPartial("Partials/_ArtistSearchList"); }

				@{ Html.RenderPartial("Partials/_AlbumSearchList"); }

				@{ Html.RenderPartial("Partials/_SongSearchList"); }

				@{ Html.RenderPartial("Partials/_TagSearchList"); }

			</div>

		</div>
	</div>

	<div id="loginPopup" title="@ViewRes._LayoutStrings.LogIn" style="display: none;">
	</div>

	<!-- Footer -->
	<span class="about-disclaimer">Background illustration by <a href="http://www.pixiv.net/member_illust.php?mode=medium&illust_id=34786809">みゆ</a> | <a href="https://code.google.com/p/vocadb/">Other credits</a></span>

	<!-- Scripts -->
	@{ Html.RenderPartial("Partials/_LayoutScripts"); }
	@Scripts.Render("~/bundles/Search/Index")

	<script type="text/javascript">

		$(document).ready(function () {

			var cultureCode = '@UICulture';
			var languageSelection = '@UserContext.LanguagePreference';
			var query = @Html.Raw(JsonHelpers.Serialize(ViewBag.Query));
			var tag = @Html.Raw(JsonHelpers.Serialize(ViewBag.Tag));
			var searchType = '@ViewBag.SearchType';
			var sort = '@ViewBag.Sort';
			var artistId = @ToJS((int?)ViewBag.ArtistId);
			var artistType = '@ViewBag.ArtistType';
			var discType = '@ViewBag.DiscType';
			var songType ='@ViewBag.SongType';
			var onlyWithPVs = @ToJS((bool?)ViewBag.OnlyWithPVs);
			var loggedUserId = @ToJS(Login.Manager.LoggedUserId);

			var rootPath = '@RootPath';
			var urlMapper = new vdb.UrlMapper(rootPath);
			var resourceRepo = new vdb.repositories.ResourceRepository(rootPath);
			var entryRepo = new vdb.repositories.EntryRepository(rootPath);
			var artistRepo = new vdb.repositories.ArtistRepository(rootPath);
			var albumRepo = new vdb.repositories.AlbumRepository(rootPath);
			var songRepo = new vdb.repositories.SongRepository(rootPath);
			var tagRepo = new vdb.repositories.TagRepository(rootPath);
			var userRepo = new vdb.repositories.UserRepository(urlMapper);

			var vm = new vdb.viewModels.search.SearchViewModel(urlMapper, entryRepo, artistRepo, albumRepo, songRepo, tagRepo, resourceRepo,
				userRepo,
				languageSelection, loggedUserId, cultureCode, searchType, query, tag, sort, artistId, artistType, discType, songType, onlyWithPVs);
			ko.applyBindings(vm);

			$("#loginPopup").dialog({ autoOpen: false, width: 400, modal: true });

		});

		vdb.functions.showLoginPopup = function() {

			$.get("/User/LoginForm", { returnUrl: window.location.href }, function(result) {
				$("#loginPopup").html(result);
				$("#loginPopup").dialog("open");
			});

		};

	</script>

</body>
</html>

@helper SearchDropDown(string visibleBinding, string viewModel, Dictionary<string, string> sortRules) {
	<div data-bind="visible: @visibleBinding, with: @viewModel" class="inline-block">
		@ViewRes.EntryIndexStrings.SortBy
		<div class="btn-group">
			<button class="btn dropdown-toggle" data-toggle="dropdown">
				<span data-bind="text: sortName"></span>
				<span class="caret"></span>
			</button>
			<ul class="dropdown-menu">
				@foreach (var sortRule in sortRules) {
					<li><a data-bind="click: function() { sort('@sortRule.Key'); }" href="#">@sortRule.Value</a></li>
				}
			</ul>
		</div>
	</div>

}