@using VocaDb.Model
@using VocaDb.Model.Domain.Globalization
@using VocaDb.Web.Helpers;
@model VocaDb.Web.Models.GlobalSearchBoxModel

@{
	var hasMessages = Login.Manager.IsLoggedIn && Login.Manager.LoggedUser.HasUnreadMessages;
}

@using (Html.BeginForm("GlobalSearch", "Home", FormMethod.Post, new { @class = "navbar-form form-inline pull-left navbar-search", id = "globalSearchBox" })) {
	
	<input type="hidden" id="globalSearchObjectType" name="objectType" data-bind="value: entryType" />
	
	<div class="input-prepend input-append navbar-searchBox">
		<div class="btn-group">
			<a class="btn btn-info dropdown-toggle" data-toggle="dropdown">
				<span data-bind="text: entryTypeName">@Model.AllObjectTypes.GetName(Model.ObjectType)</span>
				<span class="caret"></span>
			</a>
			<ul class="dropdown-menu">
				@foreach (var entryType in Model.AllObjectTypes.ValuesAndNames) {
					<li>
						<a data-bind="click: function() { entryType('@entryType.Key'); }" href="#">@entryType.Value</a>
					</li>
				}
			</ul>
		</div>
		<input type="text" name="globalSearchTerm" id="globalSearchTerm" class="globalSearchBox search-query input-xlarge" size="50" placeholder="@ViewRes.SharedStrings.Search" maxlength="255" />	
		<button type="submit" class="btn btn-info" title="@ViewRes.SharedStrings.Search">
			<i class="icon-search"></i>
		</button>
	</div>
	
	<div class="btn-group navbar-languageBar">
		<a class="btn btn-info navbar-languageBtn dropdown-toggle" data-toggle="dropdown" href="#">
			<i class="icon-user"></i>
			@ViewRes._LayoutStrings.Account
			@if (hasMessages) {
				<span class="badge badge-small badge-important">!</span>
			}
			<span class="caret"></span>		
		</a>
	
		<ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">
			@if (!Login.Manager.IsLoggedIn) {
				<li><a href="@Url.Action("Login", "User")" onclick=" vdb.functions.showLoginPopup(); return false; ">@ViewRes._LayoutStrings.LogIn</a></li>
				<li>@Html.ActionLink(ViewRes._LayoutStrings.Register, "Create", "User")</li>
			} else {
				<li>@Html.ActionLink(ViewRes.User.MySettingsStrings.Profile, "Profile", "User", new { id = Login.Manager.Name }, null)</li>
				<li>@Html.ActionLink(ViewRes.User.DetailsStrings.MySettings, "MySettings", "User")</li>
				<li>
					<a href="@Url.Action("Messages", "User")">
						@ViewRes.User.DetailsStrings.Messages
						@if (hasMessages) {
							<span class="badge badge-small badge-important">!</span>
						}
					</a>
				</li>
				<li>@Html.ActionLink(ViewRes._LayoutStrings.LogOut, "Logout", "User")</li>				
			}
			<li class="divider"></li>
			<li><h6>@ViewRes.User.MySettingsStrings.DefaultLanguageSelection</h6></li>
			@foreach (var lp in EnumVal<ContentLanguagePreference>.Values) {
				<li>
					<a href="#" onclick="return setLanguagePreferenceCookie('@lp');">
						<i class="menuIcon icon-ok" style="@(lp == Login.Manager.LanguagePreference ? "" : "display: none;")"></i>
						<i class="menuIcon icon-" style="@(lp == Login.Manager.LanguagePreference ? "display: none;" : "")"></i>
						@Translate.ContentLanguagePreferenceName(lp)
					</a>
				</li>				
			}
		</ul>
	</div>

}
