@using VocaDb.Web.Helpers

@{
	var searchObjectType = Html.GlobalSearchObjectType();
	var searchTerm = Html.GlobalSearchTerm();	
}

<script type="text/javascript">
            
    var baseAddress = '@Url.Content("~/")';

    // TODO: move to a controller.
    vdb = vdb || {};
    vdb.values = vdb.values || {};
    vdb.values.hostAddress = '@VocaDb.Model.Utils.AppConfig.HostAddress';
    vdb.values.baseAddress = baseAddress;
    vdb.resources = vdb.resources || {};
    var urlMapper = new vdb.UrlMapper(baseAddress);

    vdb.resources.album = {
        addedToCollection: '@Html.Raw(AjaxRes.AlbumStrings.AddedToCollection)'
    };
    vdb.resources.shared = @ResourceHelpers.ToJSON(AjaxRes.SharedStrings.ResourceManager, true);

    vdb.ui.initAll();

    var entryReportRepository = new vdb.repositories.EntryReportRepository(urlMapper);
    var entryTypeTranslations = @ResourceHelpers.ToJSON(Resources.EntryTypeNames.ResourceManager);
    var topBarData = @Html.Raw(JsonHelpers.Serialize(new {
		searchObjectType = searchObjectType.ToString(), searchTerm
	}));
    var hasUnreadMessages = @(Login.Manager.IsLoggedIn && Login.User.HasUnreadMessages ? "true" : "false");
    var getNewReportCount = @(Login.CanManageEntryReports ? "true" : "false");
    var topBarViewModel = new vdb.viewModels.TopBarViewModel(
        entryTypeTranslations, topBarData.searchObjectType, topBarData.searchTerm, hasUnreadMessages, getNewReportCount, entryReportRepository);
    ko.applyBindings(topBarViewModel, $("#topBar")[0]);

</script>
