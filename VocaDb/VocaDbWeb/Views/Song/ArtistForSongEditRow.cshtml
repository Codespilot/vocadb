@using VocaDb.Model;
@using VocaDb.Web.Helpers;
@model VocaDb.Model.DataContracts.Songs.ArtistForSongContract

<tr>
	<td>
		@{ var item = Html.BeginCollectionItem("ArtistLinks"); }
		@Html.HiddenFor(m => m.Id)
		@if (Model.Artist != null) {
			@Html.HiddenFor(m => m.Artist.Id, new { @class = "artistId" })
			@Html.HiddenFor(m => m.Artist.AdditionalNames)
			@Html.HiddenFor(m => m.Artist.Name)								
			@Html.HiddenFor(m => m.Artist.ArtistType)								
			@Html.ActionLink(Model.Artist.Name, "Edit", "Artist", new { id = Model.Artist.Id }, null)<br />
			<span class="extraInfo">@Model.Artist.AdditionalNames</span>
		} else {
			@Html.HiddenFor(m => m.Name)
			@Model.Name
		}
	</td>
	<td>
		@Html.CheckBoxFor(m => m.IsSupport)
		@Html.LabelFor(m => m.IsSupport, "Support")
	</td>
	<td>
		@Html.HiddenFor(m => m.Roles, new { @class = "artistRoles" })
		<div class="artistRolesList">
			@foreach (var role in Translate.ArtistRoleNames.ValuesAndNames.Where(r => r.Key != VocaDb.Model.Domain.Artists.ArtistRoles.Default)) {
				if (Model.Roles.HasFlag(role.Key)) {
					@role.Value<br />
				}
			}
		</div>
		@{ item.Dispose(); }
		@if (Model.Artist == null || VocaDb.Model.Helpers.ArtistHelper.IsCustomizable(Model.Artist.ArtistType)) {
			<a href="#" class="artistRolesEdit textLink editLink">Customize</a>
		}
	</td>
	<td>
		<a href="#" class="artistRemove textLink removeLink">Remove</a>
	</td>
</tr>
