@using System.Web.Optimization
@using VocaDb.Web.Helpers;
@using R = ViewRes.Song;
@model VocaDb.Web.Models.Song.Create

@{
    ViewBag.Title = R.CreateStrings.SubmitSong;
	ViewBag.Parents = new[] { 
		Html.ActionLink(ViewRes.SharedStrings.Songs, "Index")
	};	
}

@using (Html.BeginForm("Create", "Song", FormMethod.Post)) {

	@Helpers.ValidationSymmaryDiv(R.CreateStrings.UnableToCreateSong)
																								
	<div class="row-fluid">
		<div class="span5">
			
			<div class="alert alert-danger" data-bind="visible: isDuplicatePV" style="display:none">
				@R.CreateStrings.DuplicatePV
			</div>
			
			<div class="editor-label">
				@Html.LabelFor(m => m.PVUrl)
			</div>
			<div class="editor-field">
				@Html.TextBoxForKnockout(m => m.PVUrl, "value: pv1, focusout: checkDuplicatesAndPV", cssClass: "span8", maxLength: 255, size: 30)
				@Html.ValidationMessageFor(m => m.PVUrl)
			</div>

			<div class="editor-label">
				@Html.LabelFor(m => m.ReprintPVUrl)
			</div>
			<div class="editor-field">
				@Html.TextBoxForKnockout(m => m.ReprintPVUrl, "value: pv2, focusout: checkDuplicatesAndPV", cssClass: "span8", maxLength: 255, size: 30)
				@Html.ValidationMessageFor(m => m.ReprintPVUrl)
			</div>

			<div class="editor-label">
				@R.CreateStrings.Name
			</div>

			<div class="editor-field">
				@Html.ValidationMessage("Names")

				<table><tr><td class="formLabel">				
					@Html.LabelFor(m => m.NameOriginal)
				</td><td>
					@Html.TextBoxForKnockout(m => m.NameOriginal, "value: nameOriginal, focusout: checkDuplicatesAndPV, valueUpdate: 'afterkeydown'", cssClass: "span12", maxLength: 255, size: 40)
				</td></tr>

				<tr><td class="formLabel">
					@Html.LabelFor(m => m.NameRomaji)
				</td><td>
					@Html.TextBoxForKnockout(m => m.NameRomaji, "value: nameRomaji, focusout: checkDuplicatesAndPV, valueUpdate: 'afterkeydown'", cssClass: "span12", maxLength: 255, size: 40)
				</td></tr>
					
				<tr><td class="formLabel">
					@Html.LabelFor(m => m.NameEnglish)
				</td><td>
					@Html.TextBoxForKnockout(m => m.NameEnglish, "value: nameEnglish, focusout: checkDuplicatesAndPV, valueUpdate: 'afterkeydown'", cssClass: "span12", maxLength: 255, size: 40)
				</td></tr></table>
			</div>

			<div class="editor-label">
				@Html.LabelFor(m => m.SongType)
			</div>
			<div class="editor-field">
				@Html.SongTypeDropDownListFor(m => m.SongType)
			</div>

			<div class="editor-label">
				<span>@R.CreateStrings.ArtistsInfo</span><br />
				<span class="extraInfo">@R.CreateStrings.ArtistDesc</span>
			</div>
			<div class="editor-field">
				@Html.ValidationMessage("Artists")
				<table data-bind="foreach: artists">
					<tbody>
						<tr>
							<td>
								<a data-bind="attr: { href: vdb.utils.EntryUrlMapper.details('Artist', id) }, text: name, artistToolTip: id"></a>								
							</td>
							<td>
								<a data-bind="click: $parent.removeArtist" href="#" class="textLink removeLink">@ViewRes.SharedStrings.Remove</a>								
							</td>
						</tr>
					</tbody>
				</table>
				<br />
				<input type="text" data-bind="artistAutoComplete: artistSearchParams" maxlength="128" placeholder="@ViewRes.SharedStrings.Search" class="span8" />
				<input type="hidden" name="artists" data-bind="value: ko.toJSON(artists)" />
			</div>
			
			<br />
			<p>
				<label class="checkbox">
					@Html.CheckBoxFor(m => m.Draft)
					@R.CreateStrings.Draft
				</label>
			</p>
			
			<br />
			<button type="submit" class="btn btn-primary">@ViewRes.SharedStrings.Save</button>

		</div>
		
		<div class="span3">
			<div class="alert alert-info">
				@R.CreateStrings.SongInfo		
			</div>			     
			<div class="alert alert-info">
				<p>@R.CreateStrings.NoArtistsToName</p>
				<p>@R.CreateStrings.NameHelp</p>
				<p>@R.CreateStrings.ArtistHelp</p>
			</div>	
			
			@{ Html.RenderPartial("KnockoutPartials/_DuplicateEntriesMessage"); }
		</div>
		
	</div>
	
}

@section BodyScripts {

	<script type="text/javascript" src="@Url.Content("~/Scripts/Shared/EntrySearchDrop.js")"></script>
	@Scripts.Render("~/bundles/Song/Create")
	<script type="text/javascript">

		$(document).ready(function () {
			var repo = new vdb.repositories.SongRepository(vdb.values.baseAddress);
			var artistRepo = new vdb.repositories.ArtistRepository(vdb.values.baseAddress);
			var json = @Html.Raw(JsonHelpers.Serialize(Model));
			ko.applyBindings(new vdb.viewModels.SongCreateViewModel(repo, artistRepo, json));
		});

	</script>
		
}