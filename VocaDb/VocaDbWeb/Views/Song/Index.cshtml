@using VocaDb.Model.DataContracts.PVs
@using VocaDb.Model.Domain.PVs
@using VocaDb.Web;
@using VocaDb.Web.Models;
@using VocaDb.Web.Helpers;
@using VocaDb.Model.DataContracts.Songs;
@using PagedList.Mvc;
@using PagedList;
@using VocaDb.Web.Models.Song
@using R = ViewRes.Song;
@model VocaDb.Web.Models.Song.Index

@{
	ViewBag.Title = @ViewRes.SharedStrings.Songs;
}

@section Toolbar {
	@Html.ActionLink(ViewRes.Song.IndexStrings.AddSong, "Create", null, new { id = "createLink", @class = (Login.CanManageDb ? "" : "disabled") })
}

<link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" type="text/css" />

@if (Model.DraftsOnly) {
	@Helpers.NotificationPanel(ViewRes.EntryIndexStrings.Drafts)
}

@using (Html.BeginForm("Index", "Song", FormMethod.Post, new { @class = "form-inline" })) {
	@Html.HiddenFor(m => m.SortRule)
	
<p>
	@ViewRes.SharedStrings.Filter: @Html.TextBoxFor(m => m.Filter, new { size = 30 }) 
	&nbsp; 
	@Html.SongTypeDropDownListFor(a => a.SongType)
	&nbsp; 
	<label class="checkbox">
		@Html.CheckBoxFor(m => m.DraftsOnly)
		@ViewRes.EntryIndexStrings.OnlyDrafts
	</label>
	&nbsp;
	<button type="submit" class="btn">@ViewRes.SharedStrings.Apply</button>
</p>

	if (Model.Songs.Any()) {
	
<p>@string.Format(ViewRes.SharedStrings.EntriesFound, Model.Songs.TotalItemCount)</p>
	
@Html.PagedListPager(Model.Songs, page => Url.Action("Index", new { page, filter = Model.Filter, songType = Model.SongType, sort = Model.SortRule, draftsOnly = Model.DraftsOnly, view = Model.ViewMode }), VocaDb.Web.Code.LocalizedPagedListRenderOptions.Instance)
<br />
	
if (Model.ViewMode == SongViewMode.Details) {
    
<table class="table table-striped">
	<thead>
		<tr>
			<th colspan="2">@Html.ActionLink(ViewRes.SharedStrings.Name, "Index", new { filter = Model.Filter, songType = Model.SongType, draftsOnly = Model.DraftsOnly, sort = VocaDb.Model.Service.SongSortRule.Name })</th>
			<th>@Html.ActionLink(R.IndexStrings.Rating, "Index", new { filter = Model.Filter, songType = Model.SongType, draftsOnly = Model.DraftsOnly, sort = VocaDb.Model.Service.SongSortRule.FavoritedTimes })</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var song in Model.Songs) {
			<tr>
				<td>
                    @if (!string.IsNullOrEmpty(song.ThumbUrl)) {
						    @SongHelpers.SongIconLink(song)
	                }
				</td>
				<td>
					@Helpers.DraftIcon(song.Status)
					@Html.ActionLink(song.Name, "Details", new { id = song.Id }, new { title = song.AdditionalNames }) (@Translate.SongTypeNames[song.SongType])<br />
					<span class="extraInfo">@song.ArtistString</span><br />
					@if (song.Album != null) {
					<span class="extraInfo">@R.IndexStrings.FromAlbum @AlbumHelpers.DetailsLink(song.Album)</span><br />
					}
				</td>
				<td>
                    @string.Format(R.IndexStrings.TotalScore, song.RatingScore)<br />
					@string.Format(R.IndexStrings.Favorites, song.FavoritedTimes)
				</td>
				<td>
					@if (Login.CanEdit(song)) {
						@Html.ActionLink(ViewRes.SharedStrings.Edit, "Edit", new { id = song.Id }, new { @class = "textLink editLink" })
	 }		
				</td>
			</tr>
  }
	</tbody>	
</table>
    
} else {
    
<table class="table table-striped">
	<tbody>
		@foreach (var song in Model.Songs) {
            var primaryPv = PVHelper.PrimaryPV(song.PVs);
			<tr>
				<td>
                    @if (primaryPv != null) {
                        @Helpers.EmbedPV(primaryPv)
                    }
                </td>
                <td>
					<h3>
					    @Helpers.DraftIcon(song.Status)
					    @Html.ActionLink(song.Name, "Details", new { id = song.Id }, new { title = song.AdditionalNames })
                    </h3>
                    @Translate.SongTypeNames[song.SongType]
                    <br />

					<span class="extraInfo">@song.ArtistString</span><br />
					@if (song.Album != null) {
					<span class="extraInfo">@R.IndexStrings.FromAlbum @AlbumHelpers.DetailsLink(song.Album)</span><br />
					}					
                    <br />

                    @string.Format(R.IndexStrings.TotalScore, song.RatingScore)<br />
					@string.Format(R.IndexStrings.Favorites, song.FavoritedTimes)

				</td>
            </tr>
        }    
    </tbody>
</table>    
    
}
    
@Html.PagedListPager(Model.Songs, page => Url.Action("Index", new { page, filter = Model.Filter, songType = Model.SongType, sort = Model.SortRule, draftsOnly = Model.DraftsOnly, view = Model.ViewMode }), VocaDb.Web.Code.LocalizedPagedListRenderOptions.Instance)
	}

}
@if (!Model.Songs.Any()) {

	<p>@ViewRes.EntryIndexStrings.NoResults</p>
	@Helpers.GoogleSiteSearch()

}


<script type="text/javascript" src="@Url.Content("~/Scripts/Song/Index.js")"></script>
<script type="text/javascript">

	$(document).ready(function () {
		initPage();
	});

</script>