@using R = ViewRes.Tag;
@using VocaDb.Model.Domain.Images
@using VocaDb.Model.Utils
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers;
@inherits VocaDb.Web.Code.VocaDbPage<VocaDb.Model.DataContracts.Tags.TagDetailsContract>

@{

	ViewBag.PageTitle = R.DetailsStrings.TagDetails + " - " + Model.Name;
	ViewBag.Title = Model.Name;
	ViewBag.SubTitle = R.DetailsStrings.Tag;
	ViewBag.Parents = new[] { Html.ActionLink(ViewRes.SharedStrings.Tags, "Index") };

	var smallThumbUrl = ImageHelper.GetImageUrl(Model.Thumb, ImageSize.SmallThumb);
	var thumbUrl = ImageHelper.GetImageUrl(Model.Thumb, ImageSize.Original);
	if (!string.IsNullOrEmpty(thumbUrl)) {
		ViewContext.Controller.ViewBag.Banner = thumbUrl;
	}

	var url = VocaUriBuilder.CreateAbsolute(Url.Action("Details", new { id = Model.Name })).ToString();
	var descriptionHtml = MarkdownHelper.TranformMarkdown(Model.Description);
	var descriptionStripped = HtmlHelperFunctions.StripHtml(descriptionHtml);
	
	var related = new List<Tuple<string, string>>();

	if (Model.Parent != null) {
		related.Add(Tuple.Create(Model.Parent, "parent"));		
	}
	
	related.AddRange(Model.Children.Select(t => Tuple.Create(t, "child")));
	related.AddRange(Model.Siblings.Select(t => Tuple.Create(t, "sibling")));
	
}

@section Head {
	@HtmlHelpers.OpenGraphMetaTags(
		url: url,
		description: descriptionStripped
	)
	<link rel="canonical" href="@url" />
}

@section BodyScripts {
	<link rel="stylesheet" href="@Url.Content("~/Content/Styles/Pager.css")" type="text/css" />
	<script src="http://code.highcharts.com/highcharts.js" type="text/javascript"></script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
	<script type="text/javascript" src="@Url.Content("~/Scripts/Tag/Details.js")"></script>
	<script type="text/javascript">

		$(document).ready(function () {

			var urlMapper = new vdb.UrlMapper('@UrlMapper.HostAddress');
			var jsonModel = @Html.Raw(JsonHelpers.Serialize(new { Model.Name, Model.Parent, Model.Children, Model.Siblings }));

			$("#tabs").tabs({ load: function (event, ui) { vdb.functions.disableTabReload(ui.tab); } });
			$("#editTagLink").button({ disabled: $("#editTagLink").hasClass("disabled"), icons: { primary: 'ui-icon-wrench' } });
			$("#viewVersions").button({ icons: { primary: 'ui-icon-clock' } });
			initChart(urlMapper, jsonModel.name, jsonModel.parent, jsonModel.siblings, jsonModel.children);
		});

	</script>
}

@section Toolbar {
	@Html.ActionLink(ViewRes.SharedStrings.Edit, "Edit", new { id = Model.Name }, new { id = "editTagLink", @class = (Login.CanEdit(Model) ? "" : "disabled") })
	@Html.ActionLink(ViewRes.EntryDetailsStrings.ViewModifications, "Versions", new { id = Model.Name }, new { id = "viewVersions" })
	@Helpers.EntryStatusMessage(Model.Status)
}

<div id="tabs">

	<ul>
		<li><a href="#overviewTab">@R.DetailsStrings.Overview</a></li>
		<!-- Can't remove tabs because the ID would change -->
		<li style="@(Model.Artists.Any() ? "" : "display: none;")"><a href="@Url.Action("ArtistTagUsages", "Tag", new { id = Model.Name })" title="Artists">@R.DetailsStrings.AllArtists (@Model.ArtistCount)</a></li>
		<li style="@(Model.Albums.Any() ? "" : "display: none;")"><a href="@Url.Action("AlbumTagUsages", "Tag", new { id = Model.Name })" title="Albums">@R.DetailsStrings.AllAlbums (@Model.AlbumCount)</a></li>
		<li style="@(Model.Songs.Any() ? "" : "display: none;")"><a href="@Url.Action("SongTagUsages", "Tag", new { id = Model.Name })" title="Songs">@R.DetailsStrings.AllSongs (@Model.SongCount)</a></li>
	</ul>

	<div id="overviewTab">

		<div class="media">
			@if (!string.IsNullOrEmpty(smallThumbUrl)) {
				<a class="pull-left" href="@thumbUrl">
					<img class="media-object" src="@smallThumbUrl" alt="Thumb" />
				</a>
			}

			<div class="media-body">
				@if (Model.Description != string.Empty) {
					@Html.Raw(descriptionHtml)
				}

				@if (Model.CategoryName != string.Empty) {
					<p>@R.DetailsStrings.Category: @Model.CategoryName</p>
				}

				@if (!string.IsNullOrEmpty(Model.AliasedTo)) {
					<p>Aliased to @Html.ActionLink(Model.AliasedTo, "Details", new { id = Model.AliasedTo })</p>
				}

				@if (Model.Aliases.Any()) {
					<p>Aliases: @Html.LinkList(Model.Aliases, alias => Html.ActionLink(alias, "Details", new { id = alias }))</p>
				}

				@if (related.Any()) {
					<div id="hierarchyContainer" style='width: 1000px; height: @((60 + (Model.Parent != null ? 125 : 0) + (Model.Children.Any() ? 125 : 0)) + "px")'></div>
				}

			</div>
		</div>

		@if (Model.Artists.Any()) {
			<br />
			<h3>@R.DetailsStrings.TopArtists</h3>
			@ArtistHelpers.ArtistGrid(Model.Artists.Select(a => a), 2, true)
		}

		@if (Model.Albums.Any()) {
			<br />
			<h3>@R.DetailsStrings.TopAlbums</h3>
			@AlbumHelpers.AlbumGrid(Model.Albums.Select(a => a), 2, false, false, true)
		}

		@if (Model.Songs.Any()) {
			<br />
			<h3>@R.DetailsStrings.TopSongs</h3>
			@SongHelpers.SongGrid(Model.Songs.Select(s => s), 2, true)
		}

	</div>

	@if (Model.Artists.Any()) {
		<div id="Artists">
		</div>
	}

	@if (Model.Albums.Any()) {
		<div id="Albums">
		</div>
	}

	@if (Model.Songs.Any()) {
		<div id="Songs">
		</div>
	}

</div>
