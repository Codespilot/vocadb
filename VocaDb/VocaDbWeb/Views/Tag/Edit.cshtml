@using System.Web.Optimization
@using VocaDb.Model.Domain.Images
@using VocaDb.Model.Helpers
@using VocaDb.Web.Helpers;
@model VocaDb.Web.Models.Tag.TagEdit

@{
    ViewBag.Title = "Edit tag - " + Model.Name;
	ViewBag.Parents = new[] { 
		Html.ActionLink("Tags", "Index"),
		Html.ActionLink(Model.Name, "Details", new { id = Model.Name }) 		
	};

	var thumbUrl = ImageHelper.GetImageUrl(Model.Thumb, ImageSize.SmallThumb);
	
}

@section BodyScripts {
@Scripts.Render("~/bundles/shared/edit", "~/bundles/Tag/Edit")
<script type="text/javascript">

	$(document).ready(function () {

		@{ var data = new { Model.Name, Description = Html.Encode(Model.Description) };	}
		
		var model = @Html.Raw(JsonHelpers.Serialize(data));
		initPage(model.name);

		var viewModel = new vdb.viewModels.TagEditViewModel(model.description);
		ko.applyBindings(viewModel);
		
	});

</script>
}

@section Toolbar {
@if (Login.CanDeleteEntries && Model.IsEmpty) {
	@Html.ActionLink("Delete", "Delete", new { id = Model.Name }, new { id = "deleteLink", onclick = "return confirm(\"Are you sure you want to delete this tag?\");" })
}
}

<form action="@Url.Action("Edit", "Tag")" method="POST" enctype="multipart/form-data">
	@Html.HiddenFor(m => m.Name)

	@Helpers.SaveBtn()
	
	<div class="editor-label">
		@Html.LabelFor(m => m.CategoryName)
	</div>
	<div class="editor-field">
		@Html.TextBoxFor(m => m.CategoryName, new { id = "categoryName", size = 40 })
		@Html.ValidationMessageFor(m => m.CategoryName)
	</div>	
	
	<div class="editor-label">
		<label for="aliasedTo" class="helpTip" title="If specified, makes this tag an alias of another tag. Alias means an alternative name, for example 'dnb' and 'drumnbass'.">Aliased to</label>
	</div>
	<div class="editor-field">
		@Html.TextBoxFor(m => m.AliasedTo, new { id = "aliasedTo", size = 40, maxlength = 30 })
	</div>	
	
	<div class="editor-label">
		@Html.LabelFor(m => m.Description)
		@Helpers.MarkdownNotice()
	</div>
	<div class="editor-field">
		@Html.TextAreaForKnockout(m => m.Description, binding: "value: description, valueUpdate: 'afterkeydown'", cssClass: "span6", maxLength: 1000, rows: 8, cols: 50)
		@Html.ValidationMessageFor(m => m.Description)
		
		Live preview
		<div data-bind="markdown: description"></div>
		<br />
	</div>
	
	<div class="editor-label">
		Thumbnail
	</div>
	<div class="editor-field">
		<div class="media">
			@if (!string.IsNullOrEmpty(thumbUrl)) {
				<img class="pull-left media-object" src="@thumbUrl" alt="Thumb" />
			}
			<div class="media-body">
				@Helpers.ImageUploadMessage()
				<input type="file" id="thumbPicUpload" name="thumbPicUpload" />
			</div>
		</div>
	</div>
	
	<div class="editor-label">
		@Helpers.HelpLabel("Entry status", Resources.CommonMessages.EntryStatusExplanation)
	</div>
	<div class="editor-field">
		@Html.EnumDropDownListFor(m => m.Status, Translate.EntryStatusNames.GetValuesAndNames(Model.AllowedEntryStatuses))
	</div>

	<br />
	@Helpers.SaveBtn()
	
</form>