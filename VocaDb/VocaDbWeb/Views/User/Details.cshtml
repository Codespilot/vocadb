@using System.Web.Optimization
@using VocaDb.Model.DataContracts.Users;
@using VocaDb.Model.Domain.Users
@using VocaDb.Web.Helpers;
@using VocaDb.Model.Domain.Security;
@using R = ViewRes.User.DetailsStrings;
@model UserDetailsContract
		   
@{
    ViewBag.Title = Model.Name;
	ViewBag.Subtitle = Translate.UserGroups[Model.GroupId];

    ViewBag.Parents = new[] { 
		Html.ActionLink(ViewRes.SharedStrings.Users, "Index"), 
	};

    var ownProfile = (Login.Manager.IsLoggedIn && Login.User.Id == Model.Id && Login.User.Active);
    var canSeeDetailedStats = (ownProfile || !Model.AnonymousActivity || Login.CanModerateUsers);
	var verifiedAccount = (Model.OwnedArtistEntries.Any());
			
}

@helper AvatarImg() {
	if (!string.IsNullOrEmpty(Model.Email)) {
		@UserHelpers.ProfileIcon(Model, 120)
	} else {
		<img src="@Url.Content("~/Content/unknown.png")" width="120" height="120" alt="Avatar" />
	}
}

@helper Avatar() {
	if (Login.Manager.IsLoggedIn && Login.User.Id == Model.Id && Login.User.Active) {
		<a href="http://gravatar.com/emails/" title="@R.SetAvatar" id="avatar" class="user-avatar">
			@AvatarImg()
		</a>		
	} else {
		@AvatarImg()
	}
}

@section Toolbar {
@if (ownProfile) {
	@Html.ActionLink(R.MySettings, "MySettings", null, new { id = "mySettingsLink" });
	@Html.Raw("&nbsp;")
	@Html.ActionLink(R.Messages, "Messages", null, new { id = "messagesLink" });
}

@if (Login.Manager.IsLoggedIn && Login.User.Id != Model.Id && Login.User.Active) {
    @Html.ActionLink(R.ComposeMessage, "Messages", null, null, null, "composeTab", new { receiverName = Model.Name }, new { id = "composeMessageLink" });
}

@if (Login.CanManageUsers && EntryPermissionManager.CanEditUser(Login.Manager, Model.GroupId)) {
	@Html.Raw("&nbsp;")
	@Html.ActionLink(ViewRes.SharedStrings.Edit, "Edit", new { id = Model.Id }, new { id = "editUserLink" });
}
@if (Login.Manager.HasPermission(PermissionToken.DisableUsers) && Login.User.Id != Model.Id && Model.Active) {
	@Html.Raw("&nbsp;")
	@Html.ActionLink(R.Disable, "Disable", new { id = Model.Id }, new { id = "disableUserLink" });
}
}

<div class="row-fluid">
	<div class="span2">
		<h4>@Model.Name</h4>
		@Avatar()
		<br />
		<p class="withMargin">
			@Translate.UserGroups[Model.GroupId]
			@if (Model.EffectivePermissions.Contains(PermissionToken.DesignatedStaff)) {
				<span class="label label-important">@R.Staff</span>
			}
			@if (verifiedAccount) {
				<span class="label label-success">@R.VerifiedAccount</span>
			}
			@if (!Model.Active) {
				<span class="label">@R.AccountDisabled</span>
			}
		</p>
	</div>
	
	<div class="span8">
		
		@if (!string.IsNullOrEmpty(Model.AboutMe)) {
			<h4>@R.AboutMe</h4>
			@HtmlHelpers.FormatText(Model.AboutMe)
			<br />
		}

		@if (verifiedAccount) {
			<h4>@R.VerifiedOwner</h4>
			@ArtistHelpers.ArtistGrid(Model.OwnedArtistEntries.Select(a => a.Artist), 3, true)
			<br />
		}

		@if (Model.WebLinks.Any()) {
			<h4>@ViewRes.EntryDetailsStrings.ExternalLinks</h4>
			@EntryDetailsHelpers.ExternalLinksList(Model.WebLinks)
			<br />
		}
		
		<h4>@R.MemberSince</h4>
		@Model.CreateDate.ToShortDateString()

		@if (!string.IsNullOrEmpty(Model.Location)) {
			<h4 class="withMargin">@R.Location</h4>
			@Model.Location
  }

		@if (Login.CanManageUsers || ownProfile) {
			<h4 class="withMargin">@R.LastLogin</h4>
			@Model.LastLogin
	  if (Login.CanManageUsers) {
				@(" (")<a href='http://www.geoiptool.com/?IP=@Model.LastLoginAddress'>@Model.LastLoginAddress</a>@(")")
				<a href='http://www.stopforumspam.com/search?q=@Model.LastLoginAddress'>StopForumSpam</a>
	  }		
			@(" (" + R.VisibleOnlyToMe + ")")
	 
	  if (Model.AdditionalPermissions.Any()) {
				 <h4 class="withMargin">@R.AdditionalPermissions</h4>
				 @Translate.AllPermissionTokenNames(Model.AdditionalPermissions)
	  }
	 
			<h4 class="withMargin">@R.Email</h4>
			@Model.Email 
			@(" (" + R.VisibleOnlyToMe + ")")

  }

 		@if (Login.Manager.HasPermission(PermissionToken.DisableUsers)) {
			<h4 class="withMargin">@R.EffectivePermissions</h4>
			@Translate.AllPermissionTokenNames(Model.EffectivePermissions)
   }
	</div>
</div>


<br />

<div id="tabs">

	<ul>
		<li><a href="#stats">@R.StatsTab</a></li>
		<li><a href="@Url.Action("AlbumCollection", "User", new { id = Model.Id, count = Model.AlbumCollectionCount })" title="Collection"><span>@R.CollectionTab (@Model.AlbumCollectionCount)</span></a></li>
		<li><a href="@Url.Action("Artists", "User", new { id = Model.Id })" title="Followed artists"><span>@R.FollowedArtistsTab (@Model.ArtistCount)</span></a></li>
		<li><a href="@Url.Action("FavoriteSongs", "User", new { id = Model.Id })" title="Favorite songs"><span>@R.FavoriteSongsTab (@Model.FavoriteSongCount)</span></a></li>
		<li><a href="#customLists">@R.CustomListsTab</a></li>
	</ul>

	<div id="stats">
		<p>
			@{ var submitText = R.Submissions + ": " + Model.SubmitCount; }
			@if (canSeeDetailedStats) {
				<text>@Html.ActionLink(submitText, "EntryEdits", new { id = Model.Id, onlySubmissions = true })</text>
   } else {
				<text>@submitText</text>
   }
		</p>
		<p>
			@{ var editText = R.TotalEdits + ": " + Model.EditCount; }
			@if (canSeeDetailedStats) {
				@Html.ActionLink(editText, "EntryEdits", new { id = Model.Id, onlySubmissions = false })
   } else {
				<text>@editText</text>
   }
		</p>
		<p>@R.Comments: @Model.CommentCount</p>
		<p>@R.TagVotes: @Model.TagVotes</p>
		<p>@R.Power: @Model.Power (@R.Level @Model.Level)</p>
	</div>

	<div id="Collection">
	</div>

	<div id="Followed_artists">
	</div>

	<div id="Favorite_songs">
	</div>

	<div id="customLists">
		@SongHelpers.SongLists(Model.SongLists)

		@if (ownProfile) {
			<a href="@Url.Action("Edit", "SongList")" class="textLink addLink">@R.CreateNewList</a>
  }
	</div>

</div>

<br />
<h3>@ViewRes.EntryDetailsStrings.LatestComments</h3>

<div id="comments">
	@foreach (var comment in Model.LatestComments) {
		@CommentHelpers.CommentBodyLarge(comment, true, ownProfile)
 }
</div>

@if (Login.CanManageDb) {
<div id="newCommentPanel">
	<h3>@ViewRes.DiscussionContentStrings.NewComment</h3>
	@Html.TextArea("newCommentMessage", string.Empty, 6, 60, new { id = "newCommentMessage", maxlength = 800, @class = "span5" })
	<a href="#" class="textLink addLink" id="createComment">@ViewRes.DiscussionContentStrings.AddComment</a>
	<hr />
</div>
}

@Html.Hidden("collectionAlbumEditId", string.Empty, new { id = "collectionAlbumEditId" })

@AlbumHelpers.EditCollectionDialog(PurchaseStatus.Nothing, MediaType.Other)

@section Head {
	@Styles.Render("~/Scripts/jqwidgets27/styles/css")
}

@section BodyScripts {
	<link rel="stylesheet" href="@Url.Content("~/Content/Styles/Pager.css")" type="text/css" />
	<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
	@Scripts.Render("~/bundles/jqxRating", "~/bundles/User/Details")
	<script type="text/javascript">

		$(document).ready(function() { 
			initPage(@Model.Id, "@ViewRes.SharedStrings.Loading", "@R.ConfirmDisable", "@VocaDb.Model.Utils.AppConfig.HostAddress");
		});

	</script>
}