@using VocaDb.Web.Helpers;
@using R = ViewRes.Song;
@model VocaDb.Web.Models.Song.Create

@{
    ViewBag.Title = R.CreateStrings.SubmitSong;
	ViewBag.Parents = new[] { 
		Html.ActionLink(ViewRes.SharedStrings.Songs, "Index")
	};	
}

@using (Html.BeginForm("Create", "Song", FormMethod.Post)) {

	@Helpers.ValidationSymmaryDiv(R.CreateStrings.UnableToCreateSong);
																								
	<div class="row-fluid">
		<div class="span5">
			
			<div class="alert alert-danger" data-bind="visible: _.find(DupeEntries(), function(item) { return item.MatchProperty == 'PV' })" style="display:none">
				@R.CreateStrings.DuplicatePV
			</div>

			<div class="editor-label">
				@R.CreateStrings.Name
			</div>

			<div class="editor-field">
				@Html.ValidationMessage("Names")

				<table><tr><td class="formLabel">				
				@Html.LabelFor(m => m.NameOriginal)
				</td><td>
				@Html.TextBoxFor(m => m.NameOriginal, new Dictionary<string, object> { { "id", "nameOriginal" }, { "class", "dupeField span12" }, { "maxlength", 255 },  { "data-bind", "value: NameOriginal" } })
				</td></tr>

				<tr><td class="formLabel">
				@Html.LabelFor(m => m.NameRomaji)
				</td><td>
				@Html.TextBoxFor(m => m.NameRomaji, new { id = "nameRomaji", @class = "dupeField span12", maxlength = 255, size = 40 })
				</td></tr>
					
				<tr><td class="formLabel">
				@Html.LabelFor(m => m.NameEnglish)
				</td><td>
				@Html.TextBoxFor(m => m.NameEnglish, new { id = "nameEnglish", @class = "dupeField span12", maxlength = 255, size = 40 })
				</td></tr></table>
			</div>

			<div class="editor-label">
				@Html.LabelFor(m => m.SongType)
			</div>
			<div class="editor-field">
				@Html.SongTypeDropDownListFor(m => m.SongType)
			</div>

			<div class="editor-label">
				@Html.LabelFor(m => m.PVUrl)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(m => m.PVUrl, new { size = 30, @class = "dupeField span8", id = "pv1" })<br />
				@Html.ValidationMessageFor(m => m.PVUrl)
			</div>

			<div class="editor-label">
				@Html.LabelFor(m => m.ReprintPVUrl)
			</div>
			<div class="editor-field">
				@Html.TextBoxFor(m => m.ReprintPVUrl, new { size = 30, @class = "dupeField span8", id = "pv2" })<br />
				@Html.ValidationMessageFor(m => m.ReprintPVUrl)
			</div>

			<div class="editor-label">
				<span>@R.CreateStrings.ArtistsInfo</span><br />
				<span class="extraInfo">@R.CreateStrings.ArtistDesc</span>
			</div>
			<div class="editor-field">
				@Html.ValidationMessage("Artists")
				<table>
					<tbody id="artistsTableBody">
					@if (Model != null && Model.Artists != null) {
						foreach (var artist in Model.Artists) {
							Html.RenderPartial("ArtistContractRow", artist);
						}
					}
					</tbody>
				</table>
				<br />
				<input type="text" id="artistAddName" maxlength="128" placeholder="@ViewRes.SharedStrings.Search" class="span8" />
			</div>
			
			<br />
			<p>
				<label class="checkbox">
					@Html.CheckBoxFor(m => m.Draft)
					@R.CreateStrings.Draft
				</label>
			</p>
			
			<br />
			<button type="submit" class="btn btn-primary">@ViewRes.SharedStrings.Save</button>

		</div>
		
		<div class="span3">
			<div class="alert alert-info">
				@R.CreateStrings.SongInfo		
			</div>			     
			<div class="alert alert-info">
				<p>@R.CreateStrings.NoArtistsToName</p>
				<p>@R.CreateStrings.NameHelp</p>
                <p>@R.CreateStrings.ArtistHelp</p>
			</div>	
			
			<div class="alert" style="display:none" data-bind="visible: DupeEntries().length > 0">
				@Helpers.NotificationIcon()
				@ViewRes.EntryCreateStrings.FoundPossibleDuplicates
				<ul data-bind="foreach: DupeEntries">
					<li>
						<a data-bind="text: Entry.Name.DisplayName, attr: { href: vdb.functions.mapUrl('/' + Entry.EntryType + '/Details/') + Entry.Id }"></a> 
						(<span data-bind="text: Entry.EntryTypeName"></span>)
					</li>
				</ul>
			</div>					
		</div>
		
	</div>
	
}

<script type="text/javascript" src="@Url.Content("~/Scripts/Shared/EntrySearchDrop.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/Song/Create.js")"></script>
<script type="text/javascript">

	$(document).ready(function () {
		initPage();
	});

</script>